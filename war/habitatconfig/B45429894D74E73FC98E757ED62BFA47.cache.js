habitatconfig.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.habitatconfig;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.0\";\nvar $strongName = 'B45429894D74E73FC98E757ED62BFA47';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, seedTable = {}, Q$Object = 0, Q$String = 1, Q$JavaScriptException = 2, Q$Style$HasCssName = 3, Q$Style$TextAlign = 4, Q$Style$WhiteSpace = 5, Q$ClickHandler = 6, Q$DomEvent$Type = 7, Q$BeforeSelectionHandler = 8, Q$CloseHandler = 9, Q$HasAttachHandlers = 10, Q$SelectionHandler = 11, Q$EventHandler = 12, Q$HasHandlers = 13, Q$HasDirection$Direction = 14, Q$LongLibBase$LongEmul = 15, Q$EventListener = 16, Q$HasVisibility = 17, Q$HasWidgets = 18, Q$IsWidget = 19, Q$RootPanel = 20, Q$SourcesTabEvents = 21, Q$UIObject = 22, Q$ValueBoxBase$TextAlignment = 23, Q$Widget = 24, Q$SimpleEventBus$Command = 25, Q$UmbrellaException = 26, Q$Serializable = 27, Q$CharSequence = 28, Q$Comparable = 29, Q$Enum = 30, Q$Integer = 31, Q$Number = 32, Q$NumberFormatException = 33, Q$Object_$1 = 34, Q$StackTraceElement = 35, Q$Throwable = 36, Q$List = 37, Q$Map = 38, Q$Map$Entry = 39, Q$NoSuchElementException = 40, Q$Set = 41, Q$Module = 42, Q$ModuleStatuses$MODULE_STATUS = 43, Q$ModuleTypes$MODULE_TYPE = 44, Q$Module_$1 = 45, Q$TerrainSquare = 46, Q$TerrainSquare_$1 = 47, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  this$static.wasStarted && $onComplete(this$static);\n}\n\nfunction Animation_0(){\n}\n\ndefineSeed(3, 1, {});\n_.isRunning = false;\n_.isStarted = false;\n_.wasStarted = false;\ndefineSeed(4, 1, {});\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  new AnimationSchedulerImplTimer_0;\n}\n\ndefineSeed(5, 4, {});\nfunction AnimationSchedulerImplTimer_0(){\n  new ArrayList_0;\n}\n\ndefineSeed(6, 5, {}, AnimationSchedulerImplTimer_0);\nfunction $set(this$static, element){\n  $setAttribute(element, 'role', this$static.roleName);\n}\n\nfunction RoleImpl_0(roleName){\n  this.roleName = roleName;\n}\n\ndefineSeed(8, 1, {});\nfunction AlertRoleImpl_0(){\n  RoleImpl_0.call(this, 'alert');\n}\n\ndefineSeed(7, 8, {}, AlertRoleImpl_0);\nfunction AlertdialogRoleImpl_0(){\n  RoleImpl_0.call(this, 'alertdialog');\n}\n\ndefineSeed(9, 8, {}, AlertdialogRoleImpl_0);\nfunction ApplicationRoleImpl_0(){\n  RoleImpl_0.call(this, 'application');\n}\n\ndefineSeed(10, 8, {}, ApplicationRoleImpl_0);\nfunction ArticleRoleImpl_0(){\n  RoleImpl_0.call(this, 'article');\n}\n\ndefineSeed(11, 8, {}, ArticleRoleImpl_0);\nfunction BannerRoleImpl_0(){\n  RoleImpl_0.call(this, 'banner');\n}\n\ndefineSeed(12, 8, {}, BannerRoleImpl_0);\nfunction ButtonRoleImpl_0(){\n  RoleImpl_0.call(this, 'button');\n}\n\ndefineSeed(13, 8, {}, ButtonRoleImpl_0);\nfunction CheckboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'checkbox');\n}\n\ndefineSeed(14, 8, {}, CheckboxRoleImpl_0);\nfunction ColumnheaderRoleImpl_0(){\n  RoleImpl_0.call(this, 'columnheader');\n}\n\ndefineSeed(15, 8, {}, ColumnheaderRoleImpl_0);\nfunction ComboboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'combobox');\n}\n\ndefineSeed(16, 8, {}, ComboboxRoleImpl_0);\nfunction ComplementaryRoleImpl_0(){\n  RoleImpl_0.call(this, 'complementary');\n}\n\ndefineSeed(17, 8, {}, ComplementaryRoleImpl_0);\nfunction ContentinfoRoleImpl_0(){\n  RoleImpl_0.call(this, 'contentinfo');\n}\n\ndefineSeed(18, 8, {}, ContentinfoRoleImpl_0);\nfunction DefinitionRoleImpl_0(){\n  RoleImpl_0.call(this, 'definition');\n}\n\ndefineSeed(19, 8, {}, DefinitionRoleImpl_0);\nfunction DialogRoleImpl_0(){\n  RoleImpl_0.call(this, 'dialog');\n}\n\ndefineSeed(20, 8, {}, DialogRoleImpl_0);\nfunction DirectoryRoleImpl_0(){\n  RoleImpl_0.call(this, 'directory');\n}\n\ndefineSeed(21, 8, {}, DirectoryRoleImpl_0);\nfunction DocumentRoleImpl_0(){\n  RoleImpl_0.call(this, 'document');\n}\n\ndefineSeed(22, 8, {}, DocumentRoleImpl_0);\nfunction FormRoleImpl_0(){\n  RoleImpl_0.call(this, 'form');\n}\n\ndefineSeed(23, 8, {}, FormRoleImpl_0);\nfunction GridRoleImpl_0(){\n  RoleImpl_0.call(this, 'grid');\n}\n\ndefineSeed(24, 8, {}, GridRoleImpl_0);\nfunction GridcellRoleImpl_0(){\n  RoleImpl_0.call(this, 'gridcell');\n}\n\ndefineSeed(25, 8, {}, GridcellRoleImpl_0);\nfunction GroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'group');\n}\n\ndefineSeed(26, 8, {}, GroupRoleImpl_0);\nfunction HeadingRoleImpl_0(){\n  RoleImpl_0.call(this, 'heading');\n}\n\ndefineSeed(27, 8, {}, HeadingRoleImpl_0);\nfunction ImgRoleImpl_0(){\n  RoleImpl_0.call(this, 'img');\n}\n\ndefineSeed(28, 8, {}, ImgRoleImpl_0);\nfunction LinkRoleImpl_0(){\n  RoleImpl_0.call(this, 'link');\n}\n\ndefineSeed(29, 8, {}, LinkRoleImpl_0);\nfunction ListRoleImpl_0(){\n  RoleImpl_0.call(this, 'list');\n}\n\ndefineSeed(30, 8, {}, ListRoleImpl_0);\nfunction ListboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'listbox');\n}\n\ndefineSeed(31, 8, {}, ListboxRoleImpl_0);\nfunction ListitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'listitem');\n}\n\ndefineSeed(32, 8, {}, ListitemRoleImpl_0);\nfunction LogRoleImpl_0(){\n  RoleImpl_0.call(this, 'log');\n}\n\ndefineSeed(33, 8, {}, LogRoleImpl_0);\nfunction MainRoleImpl_0(){\n  RoleImpl_0.call(this, 'main');\n}\n\ndefineSeed(34, 8, {}, MainRoleImpl_0);\nfunction MarqueeRoleImpl_0(){\n  RoleImpl_0.call(this, 'marquee');\n}\n\ndefineSeed(35, 8, {}, MarqueeRoleImpl_0);\nfunction MathRoleImpl_0(){\n  RoleImpl_0.call(this, 'math');\n}\n\ndefineSeed(36, 8, {}, MathRoleImpl_0);\nfunction MenuRoleImpl_0(){\n  RoleImpl_0.call(this, 'menu');\n}\n\ndefineSeed(37, 8, {}, MenuRoleImpl_0);\nfunction MenubarRoleImpl_0(){\n  RoleImpl_0.call(this, 'menubar');\n}\n\ndefineSeed(38, 8, {}, MenubarRoleImpl_0);\nfunction MenuitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitem');\n}\n\ndefineSeed(39, 8, {}, MenuitemRoleImpl_0);\nfunction MenuitemcheckboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitemcheckbox');\n}\n\ndefineSeed(40, 8, {}, MenuitemcheckboxRoleImpl_0);\nfunction MenuitemradioRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitemradio');\n}\n\ndefineSeed(41, 8, {}, MenuitemradioRoleImpl_0);\nfunction NavigationRoleImpl_0(){\n  RoleImpl_0.call(this, 'navigation');\n}\n\ndefineSeed(42, 8, {}, NavigationRoleImpl_0);\nfunction NoteRoleImpl_0(){\n  RoleImpl_0.call(this, 'note');\n}\n\ndefineSeed(43, 8, {}, NoteRoleImpl_0);\nfunction OptionRoleImpl_0(){\n  RoleImpl_0.call(this, 'option');\n}\n\ndefineSeed(44, 8, {}, OptionRoleImpl_0);\nfunction PresentationRoleImpl_0(){\n  RoleImpl_0.call(this, 'presentation');\n}\n\ndefineSeed(45, 8, {}, PresentationRoleImpl_0);\nfunction ProgressbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'progressbar');\n}\n\ndefineSeed(46, 8, {}, ProgressbarRoleImpl_0);\nfunction RadioRoleImpl_0(){\n  RoleImpl_0.call(this, 'radio');\n}\n\ndefineSeed(47, 8, {}, RadioRoleImpl_0);\nfunction RadiogroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'radiogroup');\n}\n\ndefineSeed(48, 8, {}, RadiogroupRoleImpl_0);\nfunction RegionRoleImpl_0(){\n  RoleImpl_0.call(this, 'region');\n}\n\ndefineSeed(49, 8, {}, RegionRoleImpl_0);\nfunction $clinit_Roles(){\n  $clinit_Roles = nullMethod;\n  ALERTDIALOG = new AlertdialogRoleImpl_0;\n  ALERT = new AlertRoleImpl_0;\n  APPLICATION = new ApplicationRoleImpl_0;\n  ARTICLE = new ArticleRoleImpl_0;\n  BANNER = new BannerRoleImpl_0;\n  BUTTON = new ButtonRoleImpl_0;\n  CHECKBOX = new CheckboxRoleImpl_0;\n  COLUMNHEADER = new ColumnheaderRoleImpl_0;\n  COMBOBOX = new ComboboxRoleImpl_0;\n  COMPLEMENTARY = new ComplementaryRoleImpl_0;\n  CONTENTINFO = new ContentinfoRoleImpl_0;\n  DEFINITION = new DefinitionRoleImpl_0;\n  DIALOG = new DialogRoleImpl_0;\n  DIRECTORY = new DirectoryRoleImpl_0;\n  DOCUMENT = new DocumentRoleImpl_0;\n  FORM = new FormRoleImpl_0;\n  GRIDCELL = new GridcellRoleImpl_0;\n  GRID = new GridRoleImpl_0;\n  GROUP = new GroupRoleImpl_0;\n  HEADING = new HeadingRoleImpl_0;\n  IMG = new ImgRoleImpl_0;\n  LINK = new LinkRoleImpl_0;\n  LISTBOX = new ListboxRoleImpl_0;\n  LISTITEM = new ListitemRoleImpl_0;\n  LIST = new ListRoleImpl_0;\n  LOG = new LogRoleImpl_0;\n  MAIN = new MainRoleImpl_0;\n  MARQUEE = new MarqueeRoleImpl_0;\n  MATH = new MathRoleImpl_0;\n  MENUBAR = new MenubarRoleImpl_0;\n  MENUITEMCHECKBOX = new MenuitemcheckboxRoleImpl_0;\n  MENUITEMRADIO = new MenuitemradioRoleImpl_0;\n  MENUITEM = new MenuitemRoleImpl_0;\n  MENU = new MenuRoleImpl_0;\n  NAVIGATION = new NavigationRoleImpl_0;\n  NOTE = new NoteRoleImpl_0;\n  OPTION = new OptionRoleImpl_0;\n  PRESENTATION = new PresentationRoleImpl_0;\n  PROGRESSBAR = new ProgressbarRoleImpl_0;\n  RADIOGROUP = new RadiogroupRoleImpl_0;\n  RADIO = new RadioRoleImpl_0;\n  REGION = new RegionRoleImpl_0;\n  ROWGROUP = new RowgroupRoleImpl_0;\n  ROWHEADER = new RowheaderRoleImpl_0;\n  ROW = new RowRoleImpl_0;\n  SCROLLBAR = new ScrollbarRoleImpl_0;\n  SEARCH = new SearchRoleImpl_0;\n  SEPARATOR = new SeparatorRoleImpl_0;\n  SLIDER = new SliderRoleImpl_0;\n  SPINBUTTON = new SpinbuttonRoleImpl_0;\n  STATUS = new StatusRoleImpl_0;\n  TABLIST = new TablistRoleImpl_0;\n  TABPANEL = new TabpanelRoleImpl_0;\n  TAB = new TabRoleImpl_0;\n  TEXTBOX = new TextboxRoleImpl_0;\n  TIMER = new TimerRoleImpl_0;\n  TOOLBAR = new ToolbarRoleImpl_0;\n  TOOLTIP = new TooltipRoleImpl_0;\n  TREEGRID = new TreegridRoleImpl_0;\n  TREEITEM = new TreeitemRoleImpl_0;\n  TREE = new TreeRoleImpl_0;\n  ROLES_MAP = new HashMap_0;\n  $put(ROLES_MAP, 'region', REGION);\n  $put(ROLES_MAP, 'alert', ALERT);\n  $put(ROLES_MAP, 'dialog', DIALOG);\n  $put(ROLES_MAP, 'alertdialog', ALERTDIALOG);\n  $put(ROLES_MAP, 'application', APPLICATION);\n  $put(ROLES_MAP, 'document', DOCUMENT);\n  $put(ROLES_MAP, 'article', ARTICLE);\n  $put(ROLES_MAP, 'banner', BANNER);\n  $put(ROLES_MAP, 'button', BUTTON);\n  $put(ROLES_MAP, 'checkbox', CHECKBOX);\n  $put(ROLES_MAP, 'gridcell', GRIDCELL);\n  $put(ROLES_MAP, 'columnheader', COLUMNHEADER);\n  $put(ROLES_MAP, 'group', GROUP);\n  $put(ROLES_MAP, 'combobox', COMBOBOX);\n  $put(ROLES_MAP, 'complementary', COMPLEMENTARY);\n  $put(ROLES_MAP, 'contentinfo', CONTENTINFO);\n  $put(ROLES_MAP, 'definition', DEFINITION);\n  $put(ROLES_MAP, 'list', LIST);\n  $put(ROLES_MAP, 'directory', DIRECTORY);\n  $put(ROLES_MAP, 'form', FORM);\n  $put(ROLES_MAP, 'grid', GRID);\n  $put(ROLES_MAP, 'heading', HEADING);\n  $put(ROLES_MAP, 'img', IMG);\n  $put(ROLES_MAP, 'link', LINK);\n  $put(ROLES_MAP, 'listbox', LISTBOX);\n  $put(ROLES_MAP, 'listitem', LISTITEM);\n  $put(ROLES_MAP, 'log', LOG);\n  $put(ROLES_MAP, 'main', MAIN);\n  $put(ROLES_MAP, 'marquee', MARQUEE);\n  $put(ROLES_MAP, 'math', MATH);\n  $put(ROLES_MAP, 'menu', MENU);\n  $put(ROLES_MAP, 'menubar', MENUBAR);\n  $put(ROLES_MAP, 'menuitem', MENUITEM);\n  $put(ROLES_MAP, 'menuitemcheckbox', MENUITEMCHECKBOX);\n  $put(ROLES_MAP, 'option', OPTION);\n  $put(ROLES_MAP, 'radio', RADIO);\n  $put(ROLES_MAP, 'menuitemradio', MENUITEMRADIO);\n  $put(ROLES_MAP, 'navigation', NAVIGATION);\n  $put(ROLES_MAP, 'note', NOTE);\n  $put(ROLES_MAP, 'presentation', PRESENTATION);\n  $put(ROLES_MAP, 'progressbar', PROGRESSBAR);\n  $put(ROLES_MAP, 'radiogroup', RADIOGROUP);\n  $put(ROLES_MAP, 'row', ROW);\n  $put(ROLES_MAP, 'rowgroup', ROWGROUP);\n  $put(ROLES_MAP, 'rowheader', ROWHEADER);\n  $put(ROLES_MAP, 'search', SEARCH);\n  $put(ROLES_MAP, 'separator', SEPARATOR);\n  $put(ROLES_MAP, 'scrollbar', SCROLLBAR);\n  $put(ROLES_MAP, 'slider', SLIDER);\n  $put(ROLES_MAP, 'spinbutton', SPINBUTTON);\n  $put(ROLES_MAP, 'status', STATUS);\n  $put(ROLES_MAP, 'tab', TAB);\n  $put(ROLES_MAP, 'tablist', TABLIST);\n  $put(ROLES_MAP, 'tabpanel', TABPANEL);\n  $put(ROLES_MAP, 'textbox', TEXTBOX);\n  $put(ROLES_MAP, 'timer', TIMER);\n  $put(ROLES_MAP, 'toolbar', TOOLBAR);\n  $put(ROLES_MAP, 'tooltip', TOOLTIP);\n  $put(ROLES_MAP, 'tree', TREE);\n  $put(ROLES_MAP, 'treegrid', TREEGRID);\n  $put(ROLES_MAP, 'treeitem', TREEITEM);\n}\n\nvar ALERT, ALERTDIALOG, APPLICATION, ARTICLE, BANNER, BUTTON, CHECKBOX, COLUMNHEADER, COMBOBOX, COMPLEMENTARY, CONTENTINFO, DEFINITION, DIALOG, DIRECTORY, DOCUMENT, FORM, GRID, GRIDCELL, GROUP, HEADING, IMG, LINK, LIST, LISTBOX, LISTITEM, LOG, MAIN, MARQUEE, MATH, MENU, MENUBAR, MENUITEM, MENUITEMCHECKBOX, MENUITEMRADIO, NAVIGATION, NOTE, OPTION, PRESENTATION, PROGRESSBAR, RADIO, RADIOGROUP, REGION, ROLES_MAP, ROW, ROWGROUP, ROWHEADER, SCROLLBAR, SEARCH, SEPARATOR, SLIDER, SPINBUTTON, STATUS, TAB, TABLIST, TABPANEL, TEXTBOX, TIMER, TOOLBAR, TOOLTIP, TREE, TREEGRID, TREEITEM;\nfunction RowRoleImpl_0(){\n  RoleImpl_0.call(this, 'row');\n}\n\ndefineSeed(51, 8, {}, RowRoleImpl_0);\nfunction RowgroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'rowgroup');\n}\n\ndefineSeed(52, 8, {}, RowgroupRoleImpl_0);\nfunction RowheaderRoleImpl_0(){\n  RoleImpl_0.call(this, 'rowheader');\n}\n\ndefineSeed(53, 8, {}, RowheaderRoleImpl_0);\nfunction ScrollbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'scrollbar');\n}\n\ndefineSeed(54, 8, {}, ScrollbarRoleImpl_0);\nfunction SearchRoleImpl_0(){\n  RoleImpl_0.call(this, 'search');\n}\n\ndefineSeed(55, 8, {}, SearchRoleImpl_0);\nfunction SeparatorRoleImpl_0(){\n  RoleImpl_0.call(this, 'separator');\n}\n\ndefineSeed(56, 8, {}, SeparatorRoleImpl_0);\nfunction SliderRoleImpl_0(){\n  RoleImpl_0.call(this, 'slider');\n}\n\ndefineSeed(57, 8, {}, SliderRoleImpl_0);\nfunction SpinbuttonRoleImpl_0(){\n  RoleImpl_0.call(this, 'spinbutton');\n}\n\ndefineSeed(58, 8, {}, SpinbuttonRoleImpl_0);\nfunction StatusRoleImpl_0(){\n  RoleImpl_0.call(this, 'status');\n}\n\ndefineSeed(59, 8, {}, StatusRoleImpl_0);\nfunction TabRoleImpl_0(){\n  RoleImpl_0.call(this, 'tab');\n}\n\ndefineSeed(60, 8, {}, TabRoleImpl_0);\nfunction TablistRoleImpl_0(){\n  RoleImpl_0.call(this, 'tablist');\n}\n\ndefineSeed(61, 8, {}, TablistRoleImpl_0);\nfunction TabpanelRoleImpl_0(){\n  RoleImpl_0.call(this, 'tabpanel');\n}\n\ndefineSeed(62, 8, {}, TabpanelRoleImpl_0);\nfunction TextboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'textbox');\n}\n\ndefineSeed(63, 8, {}, TextboxRoleImpl_0);\nfunction TimerRoleImpl_0(){\n  RoleImpl_0.call(this, 'timer');\n}\n\ndefineSeed(64, 8, {}, TimerRoleImpl_0);\nfunction ToolbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'toolbar');\n}\n\ndefineSeed(65, 8, {}, ToolbarRoleImpl_0);\nfunction TooltipRoleImpl_0(){\n  RoleImpl_0.call(this, 'tooltip');\n}\n\ndefineSeed(66, 8, {}, TooltipRoleImpl_0);\nfunction TreeRoleImpl_0(){\n  RoleImpl_0.call(this, 'tree');\n}\n\ndefineSeed(67, 8, {}, TreeRoleImpl_0);\nfunction TreegridRoleImpl_0(){\n  RoleImpl_0.call(this, 'treegrid');\n}\n\ndefineSeed(68, 8, {}, TreegridRoleImpl_0);\nfunction TreeitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'treeitem');\n}\n\ndefineSeed(69, 8, {}, TreeitemRoleImpl_0);\nfunction $setStackTrace(stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n}\n\ndefineSeed(75, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  var className, msg;\n  className = this.___clazz$.typeName;\n  msg = this.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n;\ndefineSeed(74, 75, makeCastMap([Q$Serializable, Q$Throwable]));\nfunction RuntimeException_0(){\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_1(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_2(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\ndefineSeed(73, 74, makeCastMap([Q$Serializable, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace();\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(72, 73, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  $ensureInit(this);\n  return this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\ndefineSeed(79, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem(d) , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = (new Date).getTime();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  queue[queue.length] = task;\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].nullMethod() && (rescheduled = push_0(rescheduled, t)):$initWindowCloseHandlerImpl();\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\ndefineSeed(81, 79, {}, SchedulerImpl_0);\nvar INSTANCE;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_0(fnToString, String.fromCharCode(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction $collect(this$static){\n  var seen = {};\n  var toReturn = [];\n  var callee = arguments.callee.caller.caller;\n  while (callee) {\n    var name_0 = this$static.extractName(callee.toString());\n    toReturn.push(name_0);\n    var keyName = ':' + name_0;\n    var withThisName = seen[keyName];\n    if (withThisName) {\n      var i, j;\n      for (i = 0 , j = withThisName.length; i < j; i++) {\n        if (withThisName[i] === callee) {\n          return toReturn;\n        }\n      }\n    }\n    (withThisName || (seen[keyName] = [])).push(callee);\n    callee = callee.caller;\n  }\n  return toReturn;\n}\n\nfunction $createStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = [];\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $fillInStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $collect(new StackTraceCreator$Collector_0);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction StackTraceCreator$Collector_0(){\n}\n\ndefineSeed(84, 1, {}, StackTraceCreator$Collector_0);\n_.extractName = function extractName(fnToString){\n  return extractNameFromToString(fnToString);\n}\n;\ndefineSeed(85, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(86, 85, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $addClassName(this$static, className){\n  var idx, oldClassName;\n  className = trimClassName(className);\n  oldClassName = this$static.className;\n  idx = indexOfName(oldClassName, className);\n  if (idx == -1) {\n    oldClassName.length > 0?$setClassName(this$static, oldClassName + ' ' + className):$setClassName(this$static, className);\n    return true;\n  }\n  return false;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $removeClassName(this$static, className){\n  var begin, end, idx, newClassName, oldStyle;\n  className = trimClassName(className);\n  oldStyle = this$static.className;\n  idx = indexOfName(oldStyle, className);\n  if (idx != -1) {\n    begin = $trim($substring_0(oldStyle, 0, idx));\n    end = $trim($substring(oldStyle, idx + className.length));\n    begin.length == 0?(newClassName = end):end.length == 0?(newClassName = begin):(newClassName = begin + ' ' + end);\n    $setClassName(this$static, newClassName);\n    return true;\n  }\n  return false;\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyInt(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setTabIndex(this$static, tabIndex){\n  this$static.tabIndex = tabIndex;\n}\n\nfunction indexOfName(nameList, name_0){\n  var idx, last, lastPos;\n  idx = nameList.indexOf(name_0);\n  while (idx != -1) {\n    if (idx == 0 || nameList.charCodeAt(idx - 1) == 32) {\n      last = idx + name_0.length;\n      lastPos = nameList.length;\n      if (last == lastPos || last < lastPos && nameList.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = nameList.indexOf(name_0, idx + 1);\n  }\n  return idx;\n}\n\nfunction trimClassName(className){\n  className = $trim(className);\n  return className;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $selectAdd(select, option, before){\n  select.add(option, before);\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $eventGetCurrentTarget(event_0){\n  return event_0.currentTarget || $wnd;\n}\n\nfunction $getTabIndex(elem){\n  return elem.tabIndex < 65535?elem.tabIndex:-(elem.tabIndex % 65535) - 1;\n}\n\nfunction isOrHasChildImpl(parent_0, child){\n  if (parent_0.nodeType != 1 && parent_0.nodeType != 9) {\n    return parent_0 == child;\n  }\n  if (child.nodeType != 1) {\n    child = child.parentNode;\n    if (!child) {\n      return false;\n    }\n  }\n  if (parent_0.nodeType == 9) {\n    return parent_0 === child || parent_0.body && parent_0.body.contains(child);\n  }\n   else {\n    return parent_0 === child || parent_0.contains(child);\n  }\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(106, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_2(){\n  return this.name_0;\n}\n;\n_.ordinal = 0;\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values(){\n  $clinit_Style$TextAlign();\n  return $VALUES;\n}\n\ndefineSeed(105, 106, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(107, 105, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(108, 105, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(109, 105, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\n",
"function Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(110, 105, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_Style$WhiteSpace(){\n  $clinit_Style$WhiteSpace = nullMethod;\n  NORMAL = new Style$WhiteSpace$1_0;\n  NOWRAP = new Style$WhiteSpace$2_0;\n  PRE = new Style$WhiteSpace$3_0;\n  PRE_LINE = new Style$WhiteSpace$4_0;\n  PRE_WRAP = new Style$WhiteSpace$5_0;\n  $VALUES_0 = initValues(_3Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Style$WhiteSpace, [NORMAL, NOWRAP, PRE, PRE_LINE, PRE_WRAP]);\n}\n\nfunction Style$WhiteSpace_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_Style$WhiteSpace();\n  return $VALUES_0;\n}\n\ndefineSeed(111, 106, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_0, NORMAL, NOWRAP, PRE, PRE_LINE, PRE_WRAP;\nfunction Style$WhiteSpace$1_0(){\n  Style$WhiteSpace_0.call(this, 'NORMAL', 0);\n}\n\ndefineSeed(112, 111, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]), Style$WhiteSpace$1_0);\nfunction Style$WhiteSpace$2_0(){\n  Style$WhiteSpace_0.call(this, 'NOWRAP', 1);\n}\n\ndefineSeed(113, 111, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]), Style$WhiteSpace$2_0);\nfunction Style$WhiteSpace$3_0(){\n  Style$WhiteSpace_0.call(this, 'PRE', 2);\n}\n\ndefineSeed(114, 111, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]), Style$WhiteSpace$3_0);\nfunction Style$WhiteSpace$4_0(){\n  Style$WhiteSpace_0.call(this, 'PRE_LINE', 3);\n}\n\ndefineSeed(115, 111, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]), Style$WhiteSpace$4_0);\nfunction Style$WhiteSpace$5_0(){\n  Style$WhiteSpace_0.call(this, 'PRE_WRAP', 4);\n}\n\ndefineSeed(116, 111, makeCastMap([Q$Style$HasCssName, Q$Style$WhiteSpace, Q$Serializable, Q$Comparable, Q$Enum]), Style$WhiteSpace$5_0);\ndefineSeed(122, 1, {});\n_.toString$ = function toString_3(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(121, 122, {});\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(120, 121, {});\n_.getAssociatedType = function getAssociatedType(){\n  return $clinit_ClickEvent() , TYPE;\n}\n;\nvar registered;\ndefineSeed(119, 120, {});\ndefineSeed(118, 119, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE = new DomEvent$Type_0(new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(117, 118, {}, ClickEvent_0);\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\nvar TYPE;\ndefineSeed(125, 1, {});\n_.hashCode$ = function hashCode_2(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_4(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(124, 125, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast(registered.map_0['click'], Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, types);\n  }\n  types.add_0(this);\n  this.name_0 = 'click';\n}\n\ndefineSeed(123, 124, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, value_0){\n  this$static.map_0['click'] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(126, 1, {}, PrivateMap_0);\nfunction $dispatch(this$static, handler){\n  $onBeforeTabSelected(handler.listener, (dynamicCast(this$static.source, Q$SourcesTabEvents) , this$static.item_0.value_0)) || (this$static.canceled = true);\n}\n\nfunction BeforeSelectionEvent_0(){\n}\n\nfunction fire(source, item_0){\n  var event_0;\n  if (TYPE_0) {\n    event_0 = new BeforeSelectionEvent_0;\n    event_0.item_0 = item_0;\n    source.fireEvent(event_0);\n    return event_0;\n  }\n  return null;\n}\n\ndefineSeed(128, 121, {}, BeforeSelectionEvent_0);\n_.dispatch = function dispatch_0(handler){\n  $dispatch(this, dynamicCast(handler, Q$BeforeSelectionHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_0(){\n  return TYPE_0;\n}\n;\n_.canceled = false;\nvar TYPE_0;\nfunction CloseEvent_1(){\n}\n\nfunction fire_0(source){\n  var event_0;\n  if (TYPE_1) {\n    event_0 = new CloseEvent_1;\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(129, 121, {}, CloseEvent_1);\n_.dispatch = function dispatch_1(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_1(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction $dispatch_0(this$static, handler){\n  $onTabSelected(handler.listener, (dynamicCast(this$static.source, Q$SourcesTabEvents) , this$static.selectedItem.value_0));\n}\n\nfunction SelectionEvent_0(selectedItem){\n  this.selectedItem = selectedItem;\n}\n\nfunction fire_1(source, selectedItem){\n  var event_0;\n  if (TYPE_2) {\n    event_0 = new SelectionEvent_0(selectedItem);\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(130, 121, {}, SelectionEvent_0);\n_.dispatch = function dispatch_2(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$SelectionHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_2(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || (event_0.dead = false , event_0.source = null);\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction HandlerManager_0(source){\n  this.eventBus = new HandlerManager$Bus_0;\n  this.source = source;\n}\n\ndefineSeed(131, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0);\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\ndefineSeed(134, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_4(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, handler);\n  return new SimpleEventBus$1_0;\n}\n\nfunction $doAddNow(this$static, type_0, handler){\n  var l;\n  l = $ensureHandlerList(this$static, type_0);\n  l.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {\n      handler = this$static.isReverseOrder?it.previous():it.next_0();\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_5(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $ensureHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_2(c$iterator), Q$SimpleEventBus$Command);\n        $doAddNow(c.this$0, c.val$type, c.val$handler);\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\ndefineSeed(133, 134, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction HandlerManager$Bus_0(){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = false;\n}\n\ndefineSeed(132, 133, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(){\n}\n\ndefineSeed(135, 1, {}, LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next_0(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_0(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next_0(), Q$Throwable);\n    first?(first = false):($append(b.impl, '; ') , b);\n    $append_0(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(137, 73, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(136, 137, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_2);\nfunction AutoDirectionHandler_0(){\n}\n\ndefineSeed(138, 1, makeCastMap([Q$EventHandler]), AutoDirectionHandler_0);\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_1 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_1(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_1;\n}\n\ndefineSeed(140, 106, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_1, DEFAULT, LTR, RTL;\nfunction Array_0(){\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initDims(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, count, seedType){\n  return initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, 0, count, seedType);\n}\n\nfunction initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, index_0, count, seedType){\n  var i, isLastDim, length_0, result;\n  length_0 = dimExprs[index_0];\n  isLastDim = index_0 == count - 1;\n  result = createFromSeed(isLastDim?seedType:0, length_0);\n  initValues(arrayClasses[index_0], castableTypeMapExprs[index_0], queryIdExprs[index_0], result);\n  if (!isLastDim) {\n    ++index_0;\n    for (i = 0; i < length_0; ++i) {\n      result[i] = initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, index_0, count, seedType);\n    }\n  }\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(141, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('ie9', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (ie9) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('main.client.HabitatConfig');\n  $onModuleLoad_0(new HabitatConfig_0);\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $setItem(this$static, key, data_0){\n  $setItem_0(this$static.storage, key, data_0);\n}\n\nfunction Storage_1(){\n  this.storage = 'localStorage';\n}\n\nfunction getLocalStorageIfSupported(){\n  if ((!supportDetectorImpl && (supportDetectorImpl = new Storage$StorageSupportDetector_0) , supportDetectorImpl).isLocalStorageSupported) {\n    !localStorage_0 && (localStorage_0 = new Storage_1);\n    return localStorage_0;\n  }\n  return null;\n}\n\ndefineSeed(150, 1, {}, Storage_1);\nvar localStorage_0, supportDetectorImpl;\nfunction Storage$StorageSupportDetector_0(){\n  this.isLocalStorageSupported = $wnd.localStorage != null;\n  $wnd.sessionStorage != null;\n}\n\ndefineSeed(151, 1, {}, Storage$StorageSupportDetector_0);\n_.isLocalStorageSupported = false;\nfunction $getItem(storage, key){\n  return $wnd[storage].getItem(key);\n}\n\nfunction $setItem_0(storage, key, data_0){\n  $getItem(storage, key);\n  $wnd[storage].setItem(key, data_0);\n}\n\ndefineSeed(154, 1, {});\nfunction PassthroughParser_0(){\n}\n\ndefineSeed(155, 1, {}, PassthroughParser_0);\nvar INSTANCE_0;\nfunction PassthroughRenderer_0(){\n}\n\ndefineSeed(156, 154, {}, PassthroughRenderer_0);\nvar INSTANCE_1;\ndefineSeed(157, 1, makeCastMap([Q$EventHandler]));\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl = new DOMImplIE9_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index_0){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), index_0);\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl, elem, eventBits);\n}\n\nvar currentEvent = null, impl, sCaptureElem;\nfunction $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction addCloseHandler(handler){\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_1?TYPE_1:(TYPE_1 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0), type_0, handler);\n}\n\nfunction alert_0(msg){\n  $wnd.alert(msg);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  var scriptElem, elem;\n  if (!closeHandlersInitialized) {\n    scriptElem = (elem = $doc.createElement('script') , $setInnerText(elem, 'function __gwt_initWindowCloseHandler(beforeunload, unload) {\\n  var wnd = window\\n  , oldOnBeforeUnload = wnd.onbeforeunload\\n  , oldOnUnload = wnd.onunload;\\n  \\n  wnd.onbeforeunload = function(evt) {\\n    var ret, oldRet;\\n    try {\\n      ret = beforeunload();\\n    } finally {\\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\\n    }\\n    // Avoid returning null as IE6 will coerce it into a string.\\n    // Ensure that \"\" gets returned properly.\\n    if (ret != null) {\\n      return ret;\\n    }\\n    if (oldRet != null) {\\n      return oldRet;\\n    }\\n    // returns undefined.\\n  };\\n  \\n  wnd.onunload = function(evt) {\\n    try {\\n      unload();\\n    } finally {\\n      oldOnUnload && oldOnUnload(evt);\\n      wnd.onresize = null;\\n      wnd.onscroll = null;\\n      wnd.onbeforeunload = null;\\n      wnd.onunload = null;\\n    }\\n  };\\n  \\n  // Remove the reference once we\\'ve initialize the handler\\n  wnd.__gwt_initWindowCloseHandler = undefined;\\n}\\n') , elem);\n    $appendChild($doc.body, scriptElem);\n    $initWindowCloseHandlerImpl();\n    $removeChild($doc.body, scriptElem);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction onClosed(){\n  closeHandlersInitialized && fire_0((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0));\n}\n\nfunction onClosing(){\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_0 && $fireEvent(handlers_0, event_0);\n    return null;\n  }\n  return null;\n}\n\nvar closeHandlersInitialized = false, handlers_0;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_3 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(163, 121, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_3(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_3(){\n  return TYPE_3;\n}\n;\nvar TYPE_3;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(164, 131, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $maybeInitializeEventSystem(dom);\n      $sinkEventsImpl(elem, 0);\n      setEventListener(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l = diEvents.length; i < l; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(165, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(166, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $getChildIndex(parent_0, toFind){\n  var count = 0, child = parent_0.firstChild;\n  while (child) {\n    if (child === toFind) {\n      return count;\n    }\n    child.nodeType == 1 && ++count;\n    child = child.nextSibling;\n  }\n  return -1;\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_1 = $entry(dispatchEvent_2);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\n",
"function $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  $maybeInitializeEventSystem(this$static);\n  $sinkBitlessEventImpl(elem, eventTypeName);\n  $equals('dragover', eventTypeName) && $sinkBitlessEventImpl(elem, 'dragenter');\n}\n\nfunction $sinkBitlessEventImpl(elem, eventTypeName){\n  var dispatchMap = bitlessEventDispatchers;\n  var dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_1:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_1:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_1:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_1:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_1:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_1:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  $clinit_DOM();\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  $clinit_DOM();\n  return;\n}\n\nfunction dispatchDragEvent(evt){\n  evt.preventDefault();\n  dispatchEvent_2(evt);\n}\n\nfunction dispatchEvent_2(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = $eventGetCurrentTarget(evt);\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_2(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = $eventGetCurrentTarget(evt);\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(169, 165, {});\nvar bitlessEventDispatchers, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;\ndefineSeed(168, 169, {});\nfunction DOMImplIE9_0(){\n  $clinit_DOMImplStandard();\n}\n\ndefineSeed(167, 168, {}, DOMImplIE9_0);\nfunction $get(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  if (index_0 < 0) {\n    return null;\n  }\n  return dynamicCast($get_2(this$static.uiObjectList, index_0), Q$UIObject);\n}\n\nfunction $removeByElement(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set_0(this$static.uiObjectList, index_0);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index_0 = elem['__uiObjectID'];\n  return index_0 == null?-1:index_0;\n}\n\ndefineSeed(170, 1, {}, ElementMapperImpl_0);\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $initWindowCloseHandlerImpl(){\n  $wnd.__gwt_initWindowCloseHandler($entry(onClosing), $entry(onClosed));\n}\n\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $getStyleElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $setStyleName(this$static){\n  $setClassName(($clinit_DOM() , this$static.element), 'gwt-TabPanelBottom');\n}\n\nfunction $setVisible(this$static, visible){\n  setVisible(($clinit_DOM() , this$static.element), visible);\n}\n\nfunction $setWidth(this$static){\n  ($clinit_DOM() , this$static.element).style['width'] = '100%';\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\nfunction setStyleName(elem, style, add_0){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  add_0?$addClassName(elem, style):$removeClassName(elem, style);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\ndefineSeed(178, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.resolvePotentialElement = function resolvePotentialElement(){\n  return $resolvePotentialElement();\n}\n;\n_.toString$ = function toString_5(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return ($clinit_DOM() , this.element).outerHTML;\n}\n;\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), typeInt | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $addHandler_0(this$static, handler, type_0){\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_0(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.element, bitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));\n  this$static.doAttachChildren();\n  this$static.onLoad();\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = event_0.relatedTarget;\n      if (!!related && isOrHasChildImpl(this$static.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_0(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.doDetachChildren();\n  }\n   finally {\n    $clinit_DOM();\n    setEventListener(this$static.element, null);\n    this$static.attached = false;\n  }\n}\n\nfunction $removeFromParent(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_0(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_0('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents_0(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(177, 178, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\ndefineSeed(176, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent(child);\n  $add_3(this$static.children_0, child);\n  $clinit_DOM();\n  $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element)));\n  $setParent(child, this$static);\n}\n\nfunction $adjustIndex(this$static, child, beforeIndex){\n  var idx;\n  $checkIndexBoundsForInsertion(this$static, beforeIndex);\n  if (child.parent_0 == this$static) {\n    idx = $indexOf(this$static.children_0, child);\n    idx < beforeIndex && --beforeIndex;\n  }\n  return beforeIndex;\n}\n\nfunction $checkIndexBoundsForAccess(this$static, index_0){\n  if (index_0 < 0 || index_0 >= this$static.children_0.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $checkIndexBoundsForInsertion(this$static, index_0){\n  if (index_0 < 0 || index_0 > this$static.children_0.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $getWidget(this$static, index_0){\n  return $get_0(this$static.children_0, index_0);\n}\n\nfunction $insert(this$static, child, container, beforeIndex, domInsert){\n  beforeIndex = $adjustIndex(this$static, child, beforeIndex);\n  $removeFromParent(child);\n  $insert_2(this$static.children_0, child, beforeIndex);\n  domInsert?insertChild(container, ($clinit_DOM() , child.element), beforeIndex):($clinit_DOM() , $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element))));\n  $setParent(child, this$static);\n}\n\nfunction $remove(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild($getParentElement(elem), elem);\n    $remove_6(this$static.children_0, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children_0 = new WidgetCollection_0;\n}\n\ndefineSeed(175, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_0(){\n  return new WidgetCollection$WidgetIterator_0(this.children_0);\n}\n;\n_.remove = function remove(w){\n  return $remove(this, w);\n}\n;\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(174, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove = function remove_0(w){\n  var removed;\n  removed = $remove(this, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_5(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(179, 136, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(180, 1, {}, AttachDetachException$1_0);\n_.execute = function execute(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(181, 1, {}, AttachDetachException$2_0);\n_.execute = function execute_0(w){\n  w.onDetach();\n}\n;\nfunction $setFocus(this$static){\n  $focus(($clinit_DOM() , this$static.element));\n}\n\nfunction FocusWidget_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(184, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_0(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = $getTabIndex(($clinit_DOM() , this.element));\n  -1 == tabIndex && $setTabIndex(this.element, 0);\n}\n;\nfunction $setText(this$static, text_0){\n  $setInnerText(($clinit_DOM() , this$static.element), text_0);\n}\n\nfunction ButtonBase_0(elem){\n  FocusWidget_0.call(this, elem);\n}\n\ndefineSeed(183, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(html){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.setAttribute('type', 'button') , e));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Button');\n  $setInnerHTML(this.element, html);\n}\n\ndefineSeed(182, 183, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);\nfunction $getWidgetTd(this$static, w){\n  if (w.parent_0 != this$static) {\n    return null;\n  }\n  return $clinit_DOM() , $clinit_DOM() , $getParentElement(w.element);\n}\n\nfunction $setCellHeight(this$static, w){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(td, 'height', '100%');\n}\n\nfunction $setCellHorizontalAlignment(td, align_0){\n  $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellVerticalAlignment(td, align_0){\n  $setCellVerticalAlignment_0(($clinit_DOM() , td), align_0);\n}\n\nfunction $setCellVerticalAlignment_0(td, align_0){\n  $setPropertyImpl(td.style, 'verticalAlign', align_0.verticalAlignString);\n}\n\nfunction $setCellWidth(this$static, w){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(td, 'width', '100%');\n}\n\nfunction CellPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = ($clinit_DOM() , $doc.createElement('table'));\n  this.body_0 = $doc.createElement('tbody');\n  $appendChild(this.table, ($clinit_PotentialElement() , $resolve(this.body_0)));\n  $setElement(this, this.table);\n}\n\ndefineSeed(185, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_0('Composite.initWidget() may only be called once.');\n  }\n  $removeFromParent(widget);\n  elem = ($clinit_DOM() , widget.element);\n  $setElement_0(this$static, elem);\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent(widget, this$static);\n}\n\ndefineSeed(186, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.attached;\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents_0(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  $onAttach(this.widget);\n  $clinit_DOM();\n  setEventListener(this.element, this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  $onDetach(this.widget);\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement(this, $resolvePotentialElement());\n  return $clinit_DOM() , this.element;\n}\n;\nfunction $remove_0(this$static, w){\n  var container, removed;\n  container = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.element));\n  removed = $remove(this$static, w);\n  if (removed) {\n    w.element.style['width'] = '';\n    w.element.style['height'] = '';\n    setVisible(w.element, true);\n    $removeChild(this$static.element, container);\n    this$static.visibleWidget == w && (this$static.visibleWidget = null);\n  }\n  return removed;\n}\n\nfunction $showWidget(this$static, index_0){\n  var oldWidget;\n  $checkIndexBoundsForAccess(this$static, index_0);\n  oldWidget = this$static.visibleWidget;\n  this$static.visibleWidget = $get_0(this$static.children_0, index_0);\n  if (this$static.visibleWidget != oldWidget) {\n    !slideAnimation && (slideAnimation = new DeckPanel$SlideAnimation_0);\n    $showWidget_0(slideAnimation, oldWidget, this$static.visibleWidget);\n  }\n}\n\ndefineSeed(187, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove = function remove_1(w){\n  return $remove_0(this, w);\n}\n;\nvar slideAnimation;\nfunction $onComplete(this$static){\n  if (this$static.growing) {\n    $setPropertyImpl(this$static.container1.style, 'height', '100%');\n    setVisible(this$static.container1, true);\n    setVisible(this$static.container2, false);\n    $setPropertyImpl(this$static.container2.style, 'height', '100%');\n  }\n   else {\n    setVisible(this$static.container1, false);\n    $setPropertyImpl(this$static.container1.style, 'height', '100%');\n    $setPropertyImpl(this$static.container2.style, 'height', '100%');\n    setVisible(this$static.container2, true);\n  }\n  $setPropertyImpl(this$static.container1.style, 'overflow', 'visible');\n  $setPropertyImpl(this$static.container2.style, 'overflow', 'visible');\n  this$static.container1 = null;\n  this$static.container2 = null;\n  $setVisible(this$static.oldWidget, false);\n  this$static.oldWidget = null;\n}\n\nfunction $showWidget_0(this$static, oldWidget, newWidget){\n  var newContainer, newIndex, oldContainer, oldIndex;\n  $cancel(this$static);\n  newContainer = ($clinit_DOM() , $clinit_DOM() , $getParentElement(newWidget.element));\n  newIndex = $getChildIndex($getParentElement(newContainer), newContainer);\n  if (!oldWidget) {\n    setVisible(newContainer, true);\n    setVisible(newWidget.element, true);\n    return;\n  }\n  this$static.oldWidget = oldWidget;\n  oldContainer = $getParentElement(oldWidget.element);\n  oldIndex = $getChildIndex($getParentElement(oldContainer), oldContainer);\n  if (newIndex > oldIndex) {\n    this$static.container1 = oldContainer;\n    this$static.container2 = newContainer;\n    this$static.growing = false;\n  }\n   else {\n    this$static.container1 = newContainer;\n    this$static.container2 = oldContainer;\n    this$static.growing = true;\n  }\n  setVisible(this$static.container1, this$static.growing);\n  setVisible(this$static.container2, !this$static.growing);\n  this$static.container1 = null;\n  this$static.container2 = null;\n  $setVisible(this$static.oldWidget, false);\n  this$static.oldWidget = null;\n  setVisible(newWidget.element, true);\n}\n\nfunction DeckPanel$SlideAnimation_0(){\n  Animation_0.call(this, $clinit_AnimationSchedulerImpl());\n}\n\ndefineSeed(188, 3, {}, DeckPanel$SlideAnimation_0);\n_.container1 = null;\n_.container2 = null;\n_.growing = false;\n_.oldWidget = null;\nfunction $setTextOrHtml(this$static, content_0, isHtml){\n  isHtml?$setInnerHTML(this$static.element, content_0):$setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(189, 1, {}, DirectionalTextHelper_0);\nfunction $addCells(tbody, row, num){\n  var i, rowElem, tdElement;\n  rowElem = tbody.children[row];\n  for (i = 0; i < num; i++) {\n    tdElement = $doc.createElement('td');\n    rowElem.appendChild(tdElement);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = $getDOMRowCount(this$static.bodyElem);\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $getDOMCellCount(tableBody, row){\n  var rowElement;\n  rowElement = tableBody.children[row];\n  return rowElement.children.length;\n}\n\nfunction $getDOMRowCount(tbody){\n  return ($clinit_DOM() , tbody).children.length;\n}\n\nfunction $internalClearCell(this$static, td, clearInnerHTML){\n  var maybeChild, widget;\n  maybeChild = ($clinit_DOM() , $getFirstChildElement(td));\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_1(this$static, widget);\n    return true;\n  }\n   else {\n    clearInnerHTML && $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $remove_1(this$static, widget){\n  var elem;\n  if (widget.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(widget, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , widget.element);\n    $removeChild($getParentElement(elem), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setText_0(this$static, row, column, text_0){\n  var td, td_0;\n  $prepareCell(this$static, row, column);\n  td = (td_0 = $getRawElement(this$static.cellFormatter, row, column) , $internalClearCell(this$static, ($clinit_DOM() , td_0), text_0 == null) , td_0);\n  text_0 != null && $setInnerText(td, text_0);\n}\n\ndefineSeed(191, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_1(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove = function remove_2(widget){\n  return $remove_1(this, widget);\n}\n;\nfunction $prepareCell(this$static, row, column){\n  var cellCount, required;\n  $prepareRow(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a column with a negative index: ' + column);\n  }\n  cellCount = ($checkRowBounds(this$static, row) , $getDOMCellCount(($clinit_DOM() , this$static.bodyElem), row));\n  required = column + 1 - cellCount;\n  required > 0 && $addCells(this$static.bodyElem, row, required);\n}\n\nfunction $prepareRow(this$static, row){\n  var i, rowCount, tr;\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a row with a negative index: ' + row);\n  }\n  rowCount = $getDOMRowCount(this$static.bodyElem);\n  for (i = rowCount; i <= row; i++) {\n    i != $getDOMRowCount(this$static.bodyElem) && $checkRowBounds(this$static, i);\n    tr = ($clinit_DOM() , $doc.createElement('tr'));\n    insertChild(this$static.bodyElem, tr, i);\n  }\n}\n\nfunction FlexTable_0(){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = ($clinit_DOM() , $doc.createElement('table'));\n  this.bodyElem = $doc.createElement('tbody');\n  appendChild(this.tableElem, this.bodyElem);\n  $setElement(this, this.tableElem);\n  $setCellFormatter(this, new FlexTable$FlexCellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n}\n\ndefineSeed(190, 191, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlexTable_0);\nfunction $getCellElement(tbody, row, col){\n  return $getCells(tbody.children[row])[col];\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\ndefineSeed(193, 1, {});\nfunction FlexTable$FlexCellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(192, 193, {}, FlexTable$FlexCellFormatter_0);\nfunction $add_0(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\ndefineSeed(194, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element);\n}\n\ndefineSeed(197, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Label_0(element){\n  LabelBase_0.call(this, element, $equalsIgnoreCase('span', element.tagName));\n}\n\nfunction Label_1(text_0){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Label');\n  $setTextOrHtml(this.directionalTextHelper, text_0, false);\n}\n\ndefineSeed(196, 197, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_1);\nfunction HTML_0(html){\n  Label_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-HTML');\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n}\n\nfunction HTML_1(){\n  HTML_0.call(this, '&nbsp;');\n  ($clinit_DOM() , this.element).style['whiteSpace'] = ($clinit_Style$WhiteSpace() , 'normal');\n}\n\ndefineSeed(195, 196, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), HTML_0, HTML_1);\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size_0) {\n    if ($get_2(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get_2(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\ndefineSeed(198, 1, {}, HTMLTable$1_0);\n_.hasNext = function hasNext(){\n  return this.nextIndex < this.widgetList.size_0;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.nextIndex = -1;\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = ($clinit_DOM() , $doc.createElement('colgroup'));\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);\n    appendChild(this$static.columnGroup, $doc.createElement('col'));\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(199, 1, {}, HTMLTable$ColumnFormatter_0);\nfunction $getCells(row){\n  return row.children;\n}\n\n",
"function $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , 'center'));\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ALIGN_LEFT;\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_START, ALIGN_RIGHT;\ndefineSeed(201, 1, {});\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\ndefineSeed(202, 201, {}, HasHorizontalAlignment$HorizontalAlignmentConstant_0);\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  ALIGN_BOTTOM = new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_BOTTOM, ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\ndefineSeed(203, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);\nfunction $add_1(this$static, w){\n  var td;\n  td = $createAlignedTd(this$static);\n  $clinit_DOM();\n  $appendChild(this$static.tableRow, ($clinit_PotentialElement() , $resolve(td)));\n  $add(this$static, w, td);\n}\n\nfunction $createAlignedTd(this$static){\n  var td;\n  td = ($clinit_DOM() , $doc.createElement('td'));\n  $setCellHorizontalAlignment(td, this$static.horzAlign);\n  $setCellVerticalAlignment(td, this$static.vertAlign);\n  return td;\n}\n\nfunction $insert_0(this$static, w, beforeIndex){\n  var td;\n  $checkIndexBoundsForInsertion(this$static, beforeIndex);\n  td = $createAlignedTd(this$static);\n  insertChild(this$static.tableRow, td, beforeIndex);\n  $insert(this$static, w, ($clinit_DOM() , td), beforeIndex, false);\n}\n\nfunction $remove_2(this$static, w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.element));\n  removed = $remove(this$static, w);\n  removed && $removeChild(this$static.tableRow, td);\n  return removed;\n}\n\nfunction $setHorizontalAlignment(this$static, align_0){\n  this$static.horzAlign = align_0;\n}\n\nfunction $setVerticalAlignment(this$static, align_0){\n  this$static.vertAlign = align_0;\n}\n\nfunction HorizontalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.tableRow = ($clinit_DOM() , $doc.createElement('tr'));\n  $appendChild(this.body_0, ($clinit_PotentialElement() , $resolve(this.tableRow)));\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(204, 185, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HorizontalPanel_0);\n_.remove = function remove_3(w){\n  return $remove_2(this, w);\n}\n;\nfunction $getSelectElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $insertItem(this$static, item_0, value_0, index_0){\n  var before, itemCount, option, select;\n  select = ($clinit_DOM() , this$static.element);\n  option = $doc.createElement('option');\n  option.text = item_0;\n  option.removeAttribute('bidiwrapped');\n  option.value = value_0;\n  itemCount = select.options.length;\n  (index_0 < 0 || index_0 > itemCount) && (index_0 = itemCount);\n  if (index_0 == itemCount) {\n    $selectAdd(select, option, null);\n  }\n   else {\n    before = select.options[index_0];\n    $selectAdd(select, option, before);\n  }\n}\n\nfunction ListBox_0(){\n  FocusWidget_0.call(this, $doc.createElement('select'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-ListBox');\n}\n\ndefineSeed(205, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ListBox_0);\ndefineSeed(206, 157, makeCastMap([Q$EventHandler]));\nfunction ListenerWrapper$WrappedTabListener_0(listener){\n  this.listener = listener;\n}\n\nfunction add_1(source, listener){\n  var t;\n  t = new ListenerWrapper$WrappedTabListener_0(listener);\n  $addHandler_0(source, t, (!TYPE_0 && (TYPE_0 = new GwtEvent$Type_0) , TYPE_0));\n  $addHandler_0(source, t, (!TYPE_2 && (TYPE_2 = new GwtEvent$Type_0) , TYPE_2));\n}\n\ndefineSeed(207, 206, makeCastMap([Q$BeforeSelectionHandler, Q$SelectionHandler, Q$EventHandler]), ListenerWrapper$WrappedTabListener_0);\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_8(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_0(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_1(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size_0 == 0 && addCloseHandler(new RootPanel$3_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put(rootPanels, null, rp);\n  $add_5(widgetsToDetach, rp);\n  return rp;\n}\n\ndefineSeed(209, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]));\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(210, 1, {}, RootPanel$1_0);\n_.execute = function execute_1(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(211, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, $doc.body);\n}\n\ndefineSeed(212, 209, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $remove_3(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(($clinit_DOM() , this$static.element), w.element);\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction $setWidget(this$static, w){\n  if (w == this$static.widget) {\n    return;\n  }\n  !!w && $removeFromParent(w);\n  !!this$static.widget && $remove_3(this$static, this$static.widget);\n  this$static.widget = w;\n  if (w) {\n    appendChild(($clinit_DOM() , this$static.element), $getElement(this$static.widget));\n    $setParent(w, this$static);\n  }\n}\n\nfunction SimplePanel_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(213, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), SimplePanel_0);\n_.iterator = function iterator_2(){\n  return new SimplePanel$1_0(this);\n}\n;\n_.remove = function remove_4(w){\n  return $remove_3(this, w);\n}\n;\nfunction $next_0(this$static){\n  if (!this$static.hasElement || !this$static.this$0.widget) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.hasElement = false;\n  return this$static.this$0.widget;\n}\n\nfunction SimplePanel$1_0(this$0){\n  this.this$0 = this$0;\n  this.hasElement = !!this.this$0.widget;\n}\n\ndefineSeed(214, 1, {}, SimplePanel$1_0);\n_.hasNext = function hasNext_0(){\n  return this.hasElement;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0(this);\n}\n;\n_.hasElement = false;\nfunction $checkInsertBeforeTabIndex(this$static, beforeIndex){\n  if (beforeIndex < 0 || beforeIndex > this$static.panel.children_0.size_0 - 2) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $checkTabIndex(this$static, index_0){\n  if (index_0 < -1 || index_0 >= this$static.panel.children_0.size_0 - 2) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $insertTab(this$static, text_0, beforeIndex){\n  var item_0, delWidget, focusablePanel;\n  $checkInsertBeforeTabIndex(this$static, beforeIndex);\n  item_0 = new Label_1(text_0);\n  ($clinit_DOM() , item_0.element).style['whiteSpace'] = ($clinit_Style$WhiteSpace() , 'nowrap');\n  $checkInsertBeforeTabIndex(this$static, beforeIndex);\n  delWidget = new TabBar$ClickDelegatePanel_0(this$static, item_0);\n  $setClassName(delWidget.element, 'gwt-TabBarItem');\n  focusablePanel = delWidget.focusablePanel;\n  $clinit_Roles();\n  $set(TAB, focusablePanel.element);\n  $insert_0(this$static.panel, delWidget, beforeIndex + 1);\n  setStyleName($getParentElement(delWidget.element), 'gwt-TabBarItem-wrapper', true);\n}\n\nfunction $removeTab(this$static, index_0){\n  var toRemove;\n  $checkTabIndex(this$static, index_0);\n  toRemove = $getWidget(this$static.panel, index_0 + 1);\n  toRemove == this$static.selectedTab && (this$static.selectedTab = null);\n  $remove_2(this$static.panel, toRemove);\n}\n\nfunction $selectTab(this$static, index_0){\n  var event_0;\n  $checkTabIndex(this$static, index_0);\n  event_0 = fire(this$static, valueOf(index_0));\n  if (!!event_0 && event_0.canceled) {\n    return false;\n  }\n  $setSelectionStyle(this$static.selectedTab, false);\n  if (index_0 == -1) {\n    this$static.selectedTab = null;\n    return true;\n  }\n  this$static.selectedTab = $getWidget(this$static.panel, index_0 + 1);\n  $setSelectionStyle(this$static.selectedTab, true);\n  fire_1(this$static, valueOf(index_0));\n  return true;\n}\n\nfunction $selectTabByTabWidget(this$static, tabWidget){\n  var i, numTabs;\n  numTabs = this$static.panel.children_0.size_0 - 1;\n  for (i = 1; i < numTabs; ++i) {\n    if ($getWidget(this$static.panel, i) == tabWidget) {\n      return $selectTab(this$static, i - 1);\n    }\n  }\n  return false;\n}\n\nfunction $setSelectionStyle(item_0, selected){\n  if (item_0) {\n    if (selected) {\n      setStyleName($getStyleElement(item_0), 'gwt-TabBarItem-selected', true);\n      setStyleName(($clinit_DOM() , $clinit_DOM() , $getParentElement(item_0.element)), 'gwt-TabBarItem-wrapper-selected', true);\n    }\n     else {\n      setStyleName($getStyleElement(item_0), 'gwt-TabBarItem-selected', false);\n      setStyleName(($clinit_DOM() , $clinit_DOM() , $getParentElement(item_0.element)), 'gwt-TabBarItem-wrapper-selected', false);\n    }\n  }\n}\n\ndefineSeed(215, 186, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SourcesTabEvents, Q$UIObject, Q$Widget]));\nfunction TabBar$ClickDelegatePanel_0(this$0, child){\n  var e;\n  this.this$0 = this$0;\n  this.focusablePanel = new SimplePanel_0((e = $doc.createElement('div') , $setTabIndex(e, 0) , e));\n  $setWidget(this.focusablePanel, child);\n  $initWidget(this, this.focusablePanel);\n  this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element), 129 | (this.element.__eventBits || 0)):(this.eventsToSink |= 129);\n}\n\ndefineSeed(216, 186, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TabBar$ClickDelegatePanel_0);\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 1:\n      $selectTabByTabWidget(this.this$0, this);\n      break;\n    case 128:\n      ($eventGetKeyCode(event_0) & 65535) == 13 && $selectTabByTabWidget(this.this$0, this);\n      $eventGetKeyCode(event_0) & 65535;\n      (event_0.shiftKey?1:0) | (event_0.metaKey?8:0) | (event_0.ctrlKey?2:0) | (event_0.altKey?4:0);\n  }\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\nfunction $insert_1(this$static, widget, tabText, beforeIndex){\n  $insertProtected(this$static.deck, widget, tabText, beforeIndex);\n}\n\nfunction $onBeforeTabSelected(this$static, tabIndex){\n  var event_0;\n  event_0 = fire(this$static, valueOf(tabIndex));\n  return !event_0 || !event_0.canceled;\n}\n\nfunction $onTabSelected(this$static, tabIndex){\n  $showWidget(this$static.deck, tabIndex);\n  fire_1(this$static, valueOf(tabIndex));\n}\n\nfunction TabPanel_0(){\n  var panel;\n  this.tabBar = new TabPanel$UnmodifiableTabBar_0;\n  this.deck = new TabPanel$TabbedDeckPanel_0(this.tabBar);\n  panel = new VerticalPanel_0;\n  $add_2(panel, this.tabBar);\n  $add_2(panel, this.deck);\n  $setCellHeight(panel, this.deck);\n  $setWidth(this.tabBar);\n  add_1(this.tabBar, this);\n  $initWidget(this, panel);\n  $setClassName(($clinit_DOM() , this.element), 'gwt-TabPanel');\n  $setStyleName(this.deck);\n  $clinit_Roles();\n  $set(TABPANEL, $getElement(this.deck));\n}\n\ndefineSeed(217, 186, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SourcesTabEvents, Q$UIObject, Q$Widget]), TabPanel_0);\n_.iterator = function iterator_3(){\n  return new WidgetCollection$WidgetIterator_0(this.deck.children_0);\n}\n;\n_.remove = function remove_5(widget){\n  return $remove_4(this.deck, widget);\n}\n;\nfunction $insertProtected(this$static, w, tabText, beforeIndex){\n  var idx, container, container_0, element;\n  idx = $indexOf(this$static.children_0, w);\n  if (idx != -1) {\n    $remove_4(this$static, w);\n    idx < beforeIndex && --beforeIndex;\n  }\n  $insertTab(this$static.tabBar, tabText, beforeIndex);\n  container = (container_0 = ($clinit_DOM() , $doc.createElement('div')) , $setPropertyImpl(container_0.style, 'width', '100%') , $setPropertyImpl(container_0.style, 'height', '0px') , $setPropertyImpl(container_0.style, 'padding', '0px') , $setPropertyImpl(container_0.style, 'margin', '0px') , container_0);\n  insertChild(this$static.element, container, beforeIndex);\n  $insert(this$static, w, container, beforeIndex, true);\n  setVisible(container, false);\n  $setPropertyImpl(container.style, 'height', '100%');\n  element = w.element;\n  $equals(element.style['width'], '') && (w.element.style['width'] = '100%' , undefined);\n  $equals(element.style['height'], '') && (w.element.style['height'] = '100%' , undefined);\n  setVisible(w.element, false);\n}\n\nfunction $remove_4(this$static, w){\n  var idx;\n  idx = $indexOf(this$static.children_0, w);\n  if (idx != -1) {\n    $removeTab(this$static.tabBar, idx);\n    return $remove_0(this$static, w);\n  }\n  return false;\n}\n\nfunction TabPanel$TabbedDeckPanel_0(tabBar){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n  this.tabBar = tabBar;\n}\n\ndefineSeed(218, 187, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), TabPanel$TabbedDeckPanel_0);\n_.remove = function remove_6(w){\n  return $remove_4(this, w);\n}\n;\nfunction TabPanel$UnmodifiableTabBar_0(){\n  var first, rest;\n  this.panel = new HorizontalPanel_0;\n  $initWidget(this, this.panel);\n  this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element), 1 | (this.element.__eventBits || 0)):(this.eventsToSink |= 1);\n  $setClassName(($clinit_DOM() , this.element), 'gwt-TabBar');\n  $clinit_Roles();\n  $set(TABLIST, $getElement(this.panel));\n  $setVerticalAlignment(this.panel, ($clinit_HasVerticalAlignment() , ALIGN_BOTTOM));\n  first = new HTML_1;\n  rest = new HTML_1;\n  $setClassName(first.element, 'gwt-TabBarFirst');\n  $setClassName(rest.element, 'gwt-TabBarRest');\n  first.element.style['height'] = '100%';\n  rest.element.style['height'] = '100%';\n  $add_1(this.panel, first);\n  $add_1(this.panel, rest);\n  first.element.style['height'] = '100%';\n  $setCellHeight(this.panel, first);\n  $setCellWidth(this.panel, rest);\n  $getParentElement(first.element).className = 'gwt-TabBarFirst-wrapper';\n  $getParentElement(rest.element).className = 'gwt-TabBarRest-wrapper';\n}\n\ndefineSeed(219, 215, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SourcesTabEvents, Q$UIObject, Q$Widget]), TabPanel$UnmodifiableTabBar_0);\nfunction $setText_1(this$static){\n  $setPropertyString(($clinit_DOM() , this$static.element), 'value', '');\n}\n\nfunction ValueBoxBase_0(elem){\n  FocusWidget_0.call(this, elem);\n  new AutoDirectionHandler_0;\n}\n\ndefineSeed(222, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_2(event_0){\n  var type_0;\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(event_0.type));\n  (type_0 & 896) != 0?$onBrowserEvent(this, event_0):$onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_0(){\n}\n;\nfunction $clinit_TextBoxBase(){\n  $clinit_TextBoxBase = nullMethod;\n  $clinit_ValueBoxBase$TextAlignment();\n}\n\ndefineSeed(221, 222, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction TextBox_0(){\n  var e;\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, (e = $doc.createElement('INPUT') , e.type = 'text' , e));\n}\n\nfunction TextBox_1(element){\n  ValueBoxBase_0.call(this, element, (!INSTANCE_1 && (INSTANCE_1 = new PassthroughRenderer_0) , !INSTANCE_0 && (INSTANCE_0 = new PassthroughParser_0)));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-TextBox');\n}\n\ndefineSeed(220, 221, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextBox_0);\nfunction $clinit_ValueBoxBase$TextAlignment(){\n  $clinit_ValueBoxBase$TextAlignment = nullMethod;\n  CENTER_0 = new ValueBoxBase$TextAlignment$1_0;\n  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0;\n  LEFT_0 = new ValueBoxBase$TextAlignment$3_0;\n  RIGHT_0 = new ValueBoxBase$TextAlignment$4_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$ValueBoxBase$TextAlignment, [CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0]);\n}\n\nfunction ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_2(){\n  $clinit_ValueBoxBase$TextAlignment();\n  return $VALUES_2;\n}\n\ndefineSeed(223, 106, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_2, CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0;\nfunction ValueBoxBase$TextAlignment$1_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(224, 223, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);\nfunction ValueBoxBase$TextAlignment$2_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(225, 223, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);\nfunction ValueBoxBase$TextAlignment$3_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(226, 223, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);\nfunction ValueBoxBase$TextAlignment$4_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(227, 223, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);\nfunction $add_2(this$static, w){\n  var td, tr, td_0;\n  tr = ($clinit_DOM() , $doc.createElement('tr'));\n  td = (td_0 = $doc.createElement('td') , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(tr, ($clinit_PotentialElement() , $resolve(td)));\n  appendChild(this$static.body_0, tr);\n  $add(this$static, w, td);\n}\n\nfunction VerticalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyString(($clinit_DOM() , this.table), 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(228, 185, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), VerticalPanel_0);\n_.remove = function remove_7(w){\n  var removed, td;\n  td = ($clinit_DOM() , $getParentElement(w.element));\n  removed = $remove(this, w);\n  removed && $removeChild(this.body_0, $getParentElement(td));\n  return removed;\n}\n;\nfunction $add_3(this$static, w){\n  $insert_2(this$static, w, this$static.size_0);\n}\n\nfunction $get_0(this$static, index_0){\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  return this$static.array[index_0];\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert_2(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, this$static.array.length * 2, 0);\n    for (i = 0; i < this$static.array.length; ++i) {\n      setCheck(newArray, i, this$static.array[i]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i0 = this$static.size_0 - 1; i0 > beforeIndex; --i0) {\n    setCheck(this$static.array, i0, this$static.array[i0 - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_5(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_6(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_5(this$static, index_0);\n}\n\nfunction WidgetCollection_0(){\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, 4, 0);\n}\n\ndefineSeed(229, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_4(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_1(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(230, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_1(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.index_0 = 0;\nfunction $focus(elem){\n  try {\n    elem.focus();\n  }\n   catch (e) {\n    if (!elem || !elem.focus) {\n      throw e;\n    }\n  }\n}\n\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction SimpleEventBus$1_0(){\n}\n\ndefineSeed(235, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(236, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(237, 73, makeCastMap([Q$Serializable, Q$Throwable]), ArrayStoreException_0);\nfunction digit(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(239, 1, {}, Class_0);\n_.toString$ = function toString_6(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(240, 73, makeCastMap([Q$Serializable, Q$Throwable]), ClassCastException_0);\nfunction IllegalArgumentException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(241, 73, makeCastMap([Q$Serializable, Q$Throwable]), IllegalArgumentException_0);\nfunction IllegalStateException_0(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(242, 73, makeCastMap([Q$Serializable, Q$Throwable]), IllegalStateException_0);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(243, 73, makeCastMap([Q$Serializable, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction __parseAndValidateInt(s){\n  var i, isTooLow, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_0('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;\n  for (i = startIndex; i < length_0; i++) {\n    if (digit(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_0('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  isTooLow = toReturn < -2147483648;\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n   else if (isTooLow || toReturn > 2147483647) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\ndefineSeed(245, 1, makeCastMap([Q$Serializable, Q$Number]));\nfunction Integer_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction valueOf(i){\n  var rebase, result;\n  if (i > -129 && i < 128) {\n    rebase = i + 128;\n    result = ($clinit_Integer$BoxedValues() , boxedValues)[rebase];\n    !result && (result = boxedValues[rebase] = new Integer_0(i));\n    return result;\n  }\n  return new Integer_0(i);\n}\n\ndefineSeed(244, 245, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);\n",
"_.equals$ = function equals_1(o){\n  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_7(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction $clinit_Integer$BoxedValues(){\n  $clinit_Integer$BoxedValues = nullMethod;\n  boxedValues = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Integer, 256, 0);\n}\n\nvar boxedValues;\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(247, 73, makeCastMap([Q$Serializable, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(message){\n  IllegalArgumentException_0.call(this, message);\n}\n\ndefineSeed(249, 241, makeCastMap([Q$Serializable, Q$NumberFormatException, Q$Throwable]), NumberFormatException_0);\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(250, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_8(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $indexOf_0(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.equals$ = function equals_2(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction StringBuffer_0(){\n  this.impl = new StringBufferImplAppend_0;\n}\n\ndefineSeed(252, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);\n_.toString$ = function toString_9(){\n  return this.impl.string;\n}\n;\nfunction $append_0(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuilder_0(s){\n  this.impl = new StringBufferImplAppend_0;\n  $append(this.impl, s);\n}\n\ndefineSeed(253, 1, makeCastMap([Q$CharSequence]), StringBuilder_0);\n_.toString$ = function toString_10(){\n  return this.impl.string;\n}\n;\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(254, 73, makeCastMap([Q$Serializable, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next_0();\n    $append(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(255, 1, {});\n_.add_0 = function add_2(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains_0 = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.toString$ = function toString_11(){\n  return $toString(this);\n}\n;\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(257, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_3(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_0) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.toString$ = function toString_12(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = dynamicCast($next_2(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_1(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_7(this$static, key){\n  return !key?$removeNullSlot(this$static):$removeHashValue(this$static, key, ~~getHashCode(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\ndefineSeed(256, 257, makeCastMap([Q$Map]));\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(259, 255, makeCastMap([Q$Set]));\n_.equals$ = function equals_4(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains_0(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_1(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(258, 259, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains_0 = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_5(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.size_1 = function size_1(){\n  return this.this$0.size_0;\n}\n;\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_4(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(260, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this.iter);\n}\n;\n_.next_0 = function next_3(){\n  return dynamicCast($next_2(this.iter), Q$Map$Entry);\n}\n;\ndefineSeed(262, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_5(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_13(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(261, 262, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(263, 262, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(264, 255, makeCastMap([Q$List]));\n_.add_1 = function add_3(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_0 = function add_4(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_6(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = this.iterator();\n  iterOther = other.iterator();\n  while (iter.hasNext()) {\n    elem = iter.next_0();\n    elemOther = iterOther.next_0();\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_8(){\n  var iter, k, obj;\n  k = 1;\n  iter = this.iterator();\n  while (iter.hasNext()) {\n    obj = iter.next_0();\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_6(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return this.listIterator_0(0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_2(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.i++);\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(265, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this);\n}\n;\n_.next_0 = function next_4(){\n  return $next_2(this);\n}\n;\n_.i = 0;\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(266, 265, {}, AbstractList$ListIteratorImpl_0);\n_.hasPrevious = function hasPrevious(){\n  return this.i > 0;\n}\n;\n_.previous = function previous_0(){\n  if (this.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this.this$0.get_0(--this.i);\n}\n;\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(267, 259, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains_0 = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_7(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_2(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(268, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_4(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_5(){\n  var entry;\n  entry = dynamicCast($next_2(this.val$outerIter.iter), Q$Map$Entry);\n  return entry.getKey();\n}\n;\ndefineSeed(269, 264, makeCastMap([Q$List]));\n_.add_1 = function add_5(index_0, element){\n  var iter;\n  iter = $listIterator(this, index_0);\n  $addBefore(iter.this$0, element, iter.currentNode);\n  ++iter.currentIndex;\n  iter.lastNode = null;\n}\n;\n_.get_0 = function get_1(index_0){\n  var iter;\n  iter = $listIterator(this, index_0);\n  try {\n    return $next_3(iter);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't get element \" + index_0);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\n_.iterator = function iterator_8(){\n  return $listIterator(this, 0);\n}\n;\nfunction $add_4(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $get_2(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf_1(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $set_0(this$static, index_0){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  setCheck(this$static.array, index_0, null);\n  return previous;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n}\n\nfunction splice(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(270, 264, makeCastMap([Q$Serializable, Q$List]), ArrayList_0);\n_.add_1 = function add_6(index_0, o){\n  (index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);\n  splice(this.array, index_0, 0, o);\n  ++this.size_0;\n}\n;\n_.add_0 = function add_7(o){\n  return $add_4(this, o);\n}\n;\n_.contains_0 = function contains_2(o){\n  return $indexOf_1(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_2(index_0){\n  return $get_2(this, index_0);\n}\n;\n_.size_1 = function size_3(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(272, 264, makeCastMap([Q$Serializable, Q$List]), Collections$EmptyList_0);\n_.contains_0 = function contains_3(object){\n  return false;\n}\n;\n_.get_0 = function get_3(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_4(){\n  return 0;\n}\n;\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(273, 256, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_5(this$static, o){\n  var old;\n  old = $put(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_8(this$static, o){\n  return $remove_7(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(274, 259, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_8(o){\n  return $add_5(this, o);\n}\n;\n_.contains_0 = function contains_4(o){\n  return $contains_0(this, o);\n}\n;\n_.iterator = function iterator_9(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.size_1 = function size_5(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_14(){\n  return $toString($keySet(this.map_0));\n}\n;\nfunction $addBefore(this$static, o, target){\n  new LinkedList$Node_1(o, target);\n  ++this$static.size_0;\n}\n\nfunction $addLast(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size_0;\n}\n\nfunction $listIterator(this$static, index_0){\n  var i, node;\n  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);\n  if (index_0 >= this$static.size_0 >> 1) {\n    node = this$static.header;\n    for (i = this$static.size_0; i > index_0; --i) {\n      node = node.prev;\n    }\n  }\n   else {\n    node = this$static.header.next;\n    for (i = 0; i < index_0; ++i) {\n      node = node.next;\n    }\n  }\n  return new LinkedList$ListIteratorImpl_0(this$static, index_0, node);\n}\n\nfunction LinkedList_0(){\n  this.header = new LinkedList$Node_0;\n  this.size_0 = 0;\n}\n\ndefineSeed(275, 269, makeCastMap([Q$Serializable, Q$List]), LinkedList_0);\n_.add_0 = function add_9(o){\n  return new LinkedList$Node_1(o, this.header) , ++this.size_0 , true;\n}\n;\n_.listIterator_0 = function listIterator_1(index_0){\n  return $listIterator(this, index_0);\n}\n;\n_.size_1 = function size_6(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $next_3(this$static){\n  if (this$static.currentNode == this$static.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.lastNode = this$static.currentNode;\n  this$static.currentNode = this$static.currentNode.next;\n  ++this$static.currentIndex;\n  return this$static.lastNode.value_0;\n}\n\nfunction LinkedList$ListIteratorImpl_0(this$0, index_0, startNode){\n  this.this$0 = this$0;\n  this.currentNode = startNode;\n  this.currentIndex = index_0;\n}\n\ndefineSeed(276, 1, {}, LinkedList$ListIteratorImpl_0);\n_.hasNext = function hasNext_5(){\n  return this.currentNode != this.this$0.header;\n}\n;\n_.hasPrevious = function hasPrevious_0(){\n  return this.currentNode.prev != this.this$0.header;\n}\n;\n_.next_0 = function next_6(){\n  return $next_3(this);\n}\n;\n_.previous = function previous_1(){\n  if (this.currentNode.prev == this.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this.lastNode = this.currentNode = this.currentNode.prev;\n  --this.currentIndex;\n  return this.lastNode.value_0;\n}\n;\n_.currentIndex = 0;\n_.lastNode = null;\nfunction LinkedList$Node_0(){\n  this.next = this.prev = this;\n}\n\nfunction LinkedList$Node_1(value_0, nextNode){\n  this.value_0 = value_0;\n  this.next = nextNode;\n  this.prev = nextNode.prev;\n  nextNode.prev.next = this;\n  nextNode.prev = this;\n}\n\ndefineSeed(277, 1, {}, LinkedList$Node_0, LinkedList$Node_1);\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(278, 262, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_1(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(279, 73, makeCastMap([Q$Serializable, Q$Throwable, Q$NoSuchElementException]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction $load(this$static){\n  var sLoginName, sLoginNameCaseSensative, sLoginPass, sLoginPassCaseSensative, sLoginRequired, storage;\n  storage = getLocalStorageIfSupported();\n  if (storage) {\n    sLoginRequired = $getItem(storage.storage, 'loginRequired');\n    sLoginNameCaseSensative = $getItem(storage.storage, 'loginNameCaseSensative');\n    sLoginPassCaseSensative = $getItem(storage.storage, 'loginPassCaseSensative');\n    sLoginName = $getItem(storage.storage, 'loginName');\n    sLoginPass = $getItem(storage.storage, 'loginPass');\n    sLoginRequired != null && ($equals(sLoginRequired, 't')?(this$static.loginRequired = true):$equals(sLoginRequired, 'f') && (this$static.loginRequired = false));\n    sLoginNameCaseSensative != null && ($equals(sLoginNameCaseSensative, 't')?(this$static.loginNameCaseSensative = true):$equals(sLoginNameCaseSensative, 'f') && (this$static.loginNameCaseSensative = false));\n    sLoginPassCaseSensative != null && ($equals(sLoginPassCaseSensative, 't')?(this$static.loginPassCaseSensative = true):$equals(sLoginPassCaseSensative, 'f') && (this$static.loginPassCaseSensative = false));\n    sLoginName != null && (this$static.loginName = sLoginName);\n    sLoginPass != null && (this$static.loginPass = sLoginPass);\n    return true;\n  }\n  return false;\n}\n\nfunction $saveToClient(this$static){\n  var storage;\n  storage = getLocalStorageIfSupported();\n  if (storage) {\n    $setItem(storage, 'loginRequired', this$static.loginRequired?'t':'f');\n    $setItem(storage, 'loginNameCaseSensative', this$static.loginNameCaseSensative?'t':'f');\n    $setItem(storage, 'loginPassCaseSensative', this$static.loginPassCaseSensative?'t':'f');\n    $setItem(storage, 'loginName', this$static.loginName);\n    $setItem(storage, 'loginPass', this$static.loginPass);\n  }\n  return false;\n}\n\nfunction $setLoginRequired(this$static, loginRequired){\n  if ($validateLogin(this$static, 'mars', '12345')) {\n    this$static.loginRequired = loginRequired;\n    $saveToClient(this$static);\n    return true;\n  }\n   else \n    return false;\n}\n\nfunction $validateLogin(this$static, loginName, loginPass){\n  var compareName, comparePass;\n  compareName = this$static.loginName;\n  comparePass = this$static.loginPass;\n  if (!this$static.loginNameCaseSensative) {\n    loginName = loginName.toUpperCase();\n    compareName = this$static.loginName.toUpperCase();\n  }\n  if (!this$static.loginPassCaseSensative) {\n    loginPass = loginPass.toUpperCase();\n    comparePass = this$static.loginPass.toUpperCase();\n  }\n  return $equals(compareName, loginName) && $equals(comparePass, loginPass);\n}\n\nfunction ConfigOptions_0(){\n  this.loginRequired = true;\n  this.loginNameCaseSensative = false;\n  this.loginPassCaseSensative = true;\n  this.loginName = 'mars';\n  this.loginPass = '12345';\n}\n\ndefineSeed(281, 1, {}, ConfigOptions_0);\n_.loginNameCaseSensative = false;\n_.loginPassCaseSensative = false;\n_.loginRequired = false;\nfunction $getModuleList(this$static){\n  var moduleList, x_0, y_0;\n  moduleList = new LinkedList_0;\n  for (x_0 = 0; x_0 < this$static.width_0; x_0++) {\n    for (y_0 = 0; y_0 < this$static.depth; y_0++) {\n      !!this$static.modules[x_0][y_0] && ($addLast(moduleList, this$static.modules[x_0][y_0]) , true);\n    }\n  }\n  return moduleList;\n}\n\n",
"function $setModuleInfo(this$static, x_0, y_0, code_0, rotationsTillUpright, status_0){\n  if (x_0 >= 0 && x_0 < this$static.width_0 && y_0 >= 0 && y_0 < this$static.depth) {\n    this$static.modules[x_0][y_0] = new Module_0;\n    $setBookeepingXPos(this$static.modules[x_0][y_0], x_0);\n    $setBookeepingYPos(this$static.modules[x_0][y_0], y_0);\n    $setCode(this$static.modules[x_0][y_0], code_0);\n    $setRotationsTillUpright(this$static.modules[x_0][y_0], rotationsTillUpright);\n    $setDamageStatus(this$static.modules[x_0][y_0], status_0);\n    return true;\n  }\n   else \n    return false;\n}\n\nfunction LandingGrid_0(){\n  var x_0, y_0;\n  this.width_0 = 100;\n  this.depth = 50;\n  this.terrain = initDims([_3_3Lmain_client_Data_TerrainSquare_2_classLit, _3Lmain_client_Data_TerrainSquare_2_classLit], [makeCastMap([Q$Serializable, Q$Object_$1]), makeCastMap([Q$Serializable, Q$Object_$1, Q$TerrainSquare_$1])], [Q$TerrainSquare_$1, Q$TerrainSquare], [this.width_0, this.depth], 2, 0);\n  this.modules = initDims([_3_3Lmain_client_Data_Module_2_classLit, _3Lmain_client_Data_Module_2_classLit], [makeCastMap([Q$Serializable, Q$Object_$1]), makeCastMap([Q$Serializable, Q$Object_$1, Q$Module_$1])], [Q$Module_$1, Q$Module], [this.width_0, this.depth], 2, 0);\n  for (x_0 = 0; x_0 < this.width_0; x_0++) {\n    for (y_0 = 0; y_0 < this.depth; y_0++) {\n      this.modules[x_0][y_0] = null;\n      this.terrain[x_0][y_0] = new TerrainSquare_0;\n    }\n  }\n}\n\ndefineSeed(282, 1, {}, LandingGrid_0);\n_.depth = 0;\n_.width_0 = 0;\nfunction $setBookeepingXPos(this$static, xPos){\n  xPos >= 0 && (this$static.xc = xPos);\n}\n\nfunction $setBookeepingYPos(this$static, yPos){\n  yPos >= 0 && (this$static.yc = yPos);\n}\n\nfunction $setCode(this$static, moduleCode){\n  moduleCode >= 1 && moduleCode <= 190 && (this$static.moduleCode = moduleCode);\n}\n\nfunction $setDamageStatus(this$static, status_0){\n  this$static.status_0 = status_0;\n}\n\nfunction $setRotationsTillUpright(this$static, rotationsTillUpright){\n  rotationsTillUpright >= 0 && rotationsTillUpright <= 2 && (this$static.rotationsTillUpright = rotationsTillUpright);\n}\n\nfunction Module_0(){\n  this.xc = -1;\n  this.yc = -1;\n  this.moduleCode = 0;\n  this.rotationsTillUpright = -1;\n  this.status_0 = ($clinit_ModuleStatuses$MODULE_STATUS() , Unknown);\n}\n\ndefineSeed(283, 1, makeCastMap([Q$Module]), Module_0);\n_.moduleCode = 0;\n_.rotationsTillUpright = 0;\n_.xc = 0;\n_.yc = 0;\nfunction $clinit_ModuleStatuses$MODULE_STATUS(){\n  $clinit_ModuleStatuses$MODULE_STATUS = nullMethod;\n  Unknown = new ModuleStatuses$MODULE_STATUS_0('Unknown', 0);\n  Usable = new ModuleStatuses$MODULE_STATUS_0('Usable', 1);\n  UsableAfterRepair = new ModuleStatuses$MODULE_STATUS_0('UsableAfterRepair', 2);\n  DamagedBeyondRepair = new ModuleStatuses$MODULE_STATUS_0('DamagedBeyondRepair', 3);\n  $VALUES_3 = initValues(_3Lmain_client_Data_ModuleStatuses$MODULE_1STATUS_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$ModuleStatuses$MODULE_STATUS, [Unknown, Usable, UsableAfterRepair, DamagedBeyondRepair]);\n}\n\nfunction ModuleStatuses$MODULE_STATUS_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_3(){\n  $clinit_ModuleStatuses$MODULE_STATUS();\n  return $VALUES_3;\n}\n\ndefineSeed(284, 106, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$ModuleStatuses$MODULE_STATUS]), ModuleStatuses$MODULE_STATUS_0);\nvar $VALUES_3, DamagedBeyondRepair, Unknown, Usable, UsableAfterRepair;\nfunction getType(code_0){\n  return code_0 >= 1 && code_0 <= 40?($clinit_ModuleTypes$MODULE_TYPE() , Plain):code_0 >= 61 && code_0 <= 80?($clinit_ModuleTypes$MODULE_TYPE() , Dormitory):code_0 >= 91 && code_0 <= 100?($clinit_ModuleTypes$MODULE_TYPE() , Sanitation):code_0 >= 111 && code_0 <= 120?($clinit_ModuleTypes$MODULE_TYPE() , FoodAndWater):code_0 >= 131 && code_0 <= 134?($clinit_ModuleTypes$MODULE_TYPE() , GymAndRelaxation):code_0 >= 141 && code_0 <= 144?($clinit_ModuleTypes$MODULE_TYPE() , Canteen):code_0 >= 151 && code_0 <= 154?($clinit_ModuleTypes$MODULE_TYPE() , Power):code_0 >= 161 && code_0 <= 164?($clinit_ModuleTypes$MODULE_TYPE() , Control):code_0 >= 171 && code_0 <= 174?($clinit_ModuleTypes$MODULE_TYPE() , Airlock):code_0 >= 181 && code_0 <= 184?($clinit_ModuleTypes$MODULE_TYPE() , Medical):code_0 >= 1 && code_0 <= 190?($clinit_ModuleTypes$MODULE_TYPE() , Reserved):($clinit_ModuleTypes$MODULE_TYPE() , Unknown_0);\n}\n\nfunction $clinit_ModuleTypes$MODULE_TYPE(){\n  $clinit_ModuleTypes$MODULE_TYPE = nullMethod;\n  Unknown_0 = new ModuleTypes$MODULE_TYPE_0('Unknown', 0);\n  Reserved = new ModuleTypes$MODULE_TYPE_0('Reserved', 1);\n  Plain = new ModuleTypes$MODULE_TYPE_0('Plain', 2);\n  Dormitory = new ModuleTypes$MODULE_TYPE_0('Dormitory', 3);\n  Sanitation = new ModuleTypes$MODULE_TYPE_0('Sanitation', 4);\n  FoodAndWater = new ModuleTypes$MODULE_TYPE_0('FoodAndWater', 5);\n  GymAndRelaxation = new ModuleTypes$MODULE_TYPE_0('GymAndRelaxation', 6);\n  Canteen = new ModuleTypes$MODULE_TYPE_0('Canteen', 7);\n  Power = new ModuleTypes$MODULE_TYPE_0('Power', 8);\n  Control = new ModuleTypes$MODULE_TYPE_0('Control', 9);\n  Airlock = new ModuleTypes$MODULE_TYPE_0('Airlock', 10);\n  Medical = new ModuleTypes$MODULE_TYPE_0('Medical', 11);\n  $VALUES_4 = initValues(_3Lmain_client_Data_ModuleTypes$MODULE_1TYPE_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$ModuleTypes$MODULE_TYPE, [Unknown_0, Reserved, Plain, Dormitory, Sanitation, FoodAndWater, GymAndRelaxation, Canteen, Power, Control, Airlock, Medical]);\n}\n\nfunction ModuleTypes$MODULE_TYPE_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_ModuleTypes$MODULE_TYPE();\n  return $VALUES_4;\n}\n\ndefineSeed(286, 106, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$ModuleTypes$MODULE_TYPE]), ModuleTypes$MODULE_TYPE_0);\nvar $VALUES_4, Airlock, Canteen, Control, Dormitory, FoodAndWater, GymAndRelaxation, Medical, Plain, Power, Reserved, Sanitation, Unknown_0;\nfunction TerrainSquare_0(){\n}\n\ndefineSeed(287, 1, makeCastMap([Q$TerrainSquare]), TerrainSquare_0);\nfunction $onModuleLoad_0(this$static){\n  this$static.mainWindow = new MainWindow_0(this$static);\n  this$static.loginWindow = new LoginWindow_0(this$static);\n  this$static.configOptions = new ConfigOptions_0;\n  this$static.landingGrid = new LandingGrid_0;\n  $load(this$static.configOptions);\n  this$static.configOptions.loginRequired?$show(this$static.loginWindow, ($clinit_RootPanel() , get_0())):$show(this$static.mainWindow, ($clinit_RootPanel() , get_0()));\n}\n\nfunction HabitatConfig_0(){\n}\n\ndefineSeed(288, 1, {}, HabitatConfig_0);\nfunction $show(this$static, parent_0){\n  this$static.created || (this$static.created = this$static.create());\n  this$static.created && $add(parent_0, this$static, ($clinit_DOM() , parent_0.element));\n}\n\nfunction $show_0(this$static, parent_0, tabTitle){\n  this$static.created || (this$static.created = this$static.create());\n  this$static.created && $insert_1(parent_0, this$static, tabTitle, parent_0.deck.children_0.size_0);\n}\n\nfunction GwtWindow_0(){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n  this.created = false;\n}\n\ndefineSeed(290, 194, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.create = function create(){\n  return false;\n}\n;\n_.created = false;\nfunction CommunicationsTab_0(){\n  GwtWindow_0.call(this);\n}\n\ndefineSeed(289, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), CommunicationsTab_0);\n_.create = function create_0(){\n  $add_0(this, new HTML_0('Communications'));\n  return true;\n}\n;\nfunction ConfigTab_0(){\n  GwtWindow_0.call(this);\n}\n\ndefineSeed(291, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), ConfigTab_0);\n_.create = function create_1(){\n  $add_0(this, new HTML_0('Config'));\n  return true;\n}\n;\nfunction HomeTab_0(){\n  GwtWindow_0.call(this);\n}\n\ndefineSeed(292, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HomeTab_0);\n_.create = function create_2(){\n  $add_0(this, new HTML_0('Home'));\n  return true;\n}\n;\nfunction $ClearCredentials(this$static){\n  $setText_1(this$static.passwordTextBox);\n  $setText_1(this$static.usernameTextBox);\n}\n\nfunction LoginWindow_0(root){\n  GwtWindow_0.call(this);\n  this.root = root;\n}\n\ndefineSeed(293, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), LoginWindow_0);\n_.create = function create_3(){\n  var login, passwordLbl, usernameLbl;\n  usernameLbl = new Label_1('Username: ');\n  passwordLbl = new Label_1('Password: ');\n  this.usernameTextBox = new TextBox_0;\n  this.passwordTextBox = new TextBox_0;\n  login = new Button_0('Sign on');\n  $addDomHandler(login, new LoginWindow$1_0(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $setFocus(this.usernameTextBox);\n  $add(this, usernameLbl, ($clinit_DOM() , this.element));\n  $add_0(this, this.usernameTextBox);\n  $add(this, passwordLbl, this.element);\n  $add_0(this, this.passwordTextBox);\n  $add(this, login, this.element);\n  return true;\n}\n;\nfunction LoginWindow$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(294, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), LoginWindow$1_0);\n_.onClick = function onClick(event_0){\n  var config, errorText, nameCaseSensative, passCaseSensative;\n  config = this.this$0.root.configOptions;\n  if ($validateLogin(config, $getPropertyString($getElement(this.this$0.usernameTextBox), 'value'), $getPropertyString($getElement(this.this$0.passwordTextBox), 'value'))) {\n    $removeFromParent(this.this$0);\n    $show(this.this$0.root.mainWindow, ($clinit_RootPanel() , get_0()));\n  }\n   else {\n    errorText = 'Invalid Username or Password!';\n    nameCaseSensative = config.loginNameCaseSensative;\n    passCaseSensative = config.loginPassCaseSensative;\n    nameCaseSensative && passCaseSensative?(errorText += '\\n\\n\\nNote: The username and password are case sensative!'):passCaseSensative?(errorText += '\\n\\n\\nNote: The password is case sensative!'):nameCaseSensative && (errorText += '\\n\\n\\nNote: The username is case sensative!');\n    alert_0(errorText);\n  }\n}\n;\nfunction MainWindow_0(root){\n  GwtWindow_0.call(this);\n  this.root = root;\n  this.homeTab = new HomeTab_0;\n  this.modulesTab = new ModulesTab_0(root);\n  this.configTab = new ConfigTab_0;\n  this.communicationsTab = new CommunicationsTab_0;\n  this.settingsTab = new SettingsTab_0(root);\n}\n\ndefineSeed(295, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), MainWindow_0);\n_.create = function create_4(){\n  var logout;\n  this.hpLogout = new HorizontalPanel_0;\n  logout = new Button_0('Logout');\n  $addDomHandler(logout, new MainWindow$1_0(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $setHorizontalAlignment(this.hpLogout, ($clinit_HasHorizontalAlignment() , ALIGN_RIGHT));\n  $setWidth(this.hpLogout);\n  $add_1(this.hpLogout, logout);\n  $setVisible(this.hpLogout, false);\n  $add_0(this, this.hpLogout);\n  this.root.configOptions.loginRequired && $setVisible(this.hpLogout, true);\n  this.tabs = new TabPanel_0;\n  $setWidth(this.tabs);\n  $show_0(this.homeTab, this.tabs, 'Home');\n  $show_0(this.modulesTab, this.tabs, 'Modules');\n  $show_0(this.configTab, this.tabs, 'Configurations');\n  $show_0(this.communicationsTab, this.tabs, 'Communications');\n  $show_0(this.settingsTab, this.tabs, 'Settings');\n  $selectTab(this.tabs.tabBar, 0);\n  $add_0(this, this.tabs);\n  return true;\n}\n;\nfunction MainWindow$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(296, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), MainWindow$1_0);\n_.onClick = function onClick_0(event_0){\n  $removeFromParent(this.this$0);\n  this.this$0.root.loginWindow.created && $ClearCredentials(this.this$0.root.loginWindow);\n  $show(this.this$0.root.loginWindow, ($clinit_RootPanel() , get_0()));\n}\n;\nfunction $refreshDisplayedModules(this$static){\n  var curr, i, moduleCount, modules;\n  modules = $getModuleList(this$static.root.landingGrid);\n  i = $listIterator(modules, 0);\n  moduleCount = 0;\n  while (i.currentNode != i.this$0.header) {\n    curr = dynamicCast($next_3(i), Q$Module);\n    $setText_0(this$static.storetable, moduleCount, 0, '' + curr.moduleCode);\n    $setText_0(this$static.storetable, moduleCount, 1, '' + curr.xc);\n    $setText_0(this$static.storetable, moduleCount, 2, '' + curr.yc);\n    $setText_0(this$static.storetable, moduleCount, 3, '' + curr.status_0);\n    $setText_0(this$static.storetable, moduleCount, 4, '' + curr.rotationsTillUpright);\n    $setText_0(this$static.storetable, moduleCount, 5, '' + getType(curr.moduleCode));\n    ++moduleCount;\n  }\n}\n\nfunction $validateCode(code_0){\n  var mt;\n  mt = code_0 >= 1 && code_0 <= 40?($clinit_ModuleTypes$MODULE_TYPE() , Plain):code_0 >= 61 && code_0 <= 80?($clinit_ModuleTypes$MODULE_TYPE() , Dormitory):code_0 >= 91 && code_0 <= 100?($clinit_ModuleTypes$MODULE_TYPE() , Sanitation):code_0 >= 111 && code_0 <= 120?($clinit_ModuleTypes$MODULE_TYPE() , FoodAndWater):code_0 >= 131 && code_0 <= 134?($clinit_ModuleTypes$MODULE_TYPE() , GymAndRelaxation):code_0 >= 141 && code_0 <= 144?($clinit_ModuleTypes$MODULE_TYPE() , Canteen):code_0 >= 151 && code_0 <= 154?($clinit_ModuleTypes$MODULE_TYPE() , Power):code_0 >= 161 && code_0 <= 164?($clinit_ModuleTypes$MODULE_TYPE() , Control):code_0 >= 171 && code_0 <= 174?($clinit_ModuleTypes$MODULE_TYPE() , Airlock):code_0 >= 181 && code_0 <= 184?($clinit_ModuleTypes$MODULE_TYPE() , Medical):code_0 >= 1 && code_0 <= 190?($clinit_ModuleTypes$MODULE_TYPE() , Reserved):($clinit_ModuleTypes$MODULE_TYPE() , Unknown_0);\n  if (mt == ($clinit_ModuleTypes$MODULE_TYPE() , Unknown_0) || mt == Reserved) {\n    alert_0('Invalid module code.');\n    return false;\n  }\n   else \n    return true;\n}\n\nfunction $validateXc(this$static, xc){\n  if (xc < 0 || xc >= this$static.root.landingGrid.width_0) {\n    alert_0('Invalid xc: ' + xc);\n    return false;\n  }\n   else \n    return true;\n}\n\nfunction $validateYc(this$static, yc){\n  if (yc < 0 || yc >= this$static.root.landingGrid.depth) {\n    alert_0('Invalid yc.');\n    return false;\n  }\n   else \n    return true;\n}\n\nfunction ModulesTab_0(root){\n  GwtWindow_0.call(this);\n  this.root = root;\n}\n\ndefineSeed(297, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), ModulesTab_0);\n_.create = function create_5(){\n  var addb, id_0, logpanel, modID, modLabel, orienbox, orientation, statbox, status_0, xcor, xcord, ycor, ycord;\n  modLabel = new HorizontalPanel_0;\n  modID = new Label_1('ID');\n  xcor = new Label_1('X-Cor');\n  ycor = new Label_1('Y-Cor');\n  status_0 = new Label_1('Status');\n  orientation = new Label_1('Orientation');\n  addb = new Button_0('Add');\n  $add_1(modLabel, modID);\n  $add_1(modLabel, xcor);\n  $add_1(modLabel, ycor);\n  $add_1(modLabel, status_0);\n  $add_1(modLabel, orientation);\n  $setHorizontalAlignment(modLabel, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));\n  $setPropertyInt(modLabel.table, 'cellSpacing', 30);\n  $add(this, modLabel, ($clinit_DOM() , this.element));\n  logpanel = new HorizontalPanel_0;\n  id_0 = new TextBox_0;\n  xcord = new TextBox_0;\n  ycord = new TextBox_0;\n  statbox = new ListBox_0;\n  orienbox = new ListBox_0;\n  this.storetable = new FlexTable_0;\n  $insertItem(statbox, 'Usable', 'Usable', -1);\n  $insertItem(statbox, 'Usable after repair', 'Usable after repair', -1);\n  $insertItem(statbox, 'Beyond repair', 'Beyond repair', -1);\n  $add_1(logpanel, id_0);\n  $add_1(logpanel, xcord);\n  $add_1(logpanel, ycord);\n  $setHorizontalAlignment(logpanel, ALIGN_LEFT);\n  $setPropertyInt(logpanel.table, 'cellSpacing', 22);\n  id_0.element.style['width'] = '20px';\n  id_0.element.style['height'] = '10px';\n  xcord.element.style['width'] = '20px';\n  xcord.element.style['height'] = '10px';\n  ycord.element.style['width'] = '20px';\n  ycord.element.style['height'] = '10px';\n  statbox.element.style['width'] = '70px';\n  statbox.element.style['height'] = '25px';\n  $add_1(logpanel, statbox);\n  $insertItem(orienbox, '0-Upright', '0-Upright', -1);\n  $insertItem(orienbox, '1-Side', '1-Side', -1);\n  $insertItem(orienbox, '2-Upside down', '2-Upside down', -1);\n  orienbox.element.style['width'] = '80px';\n  orienbox.element.style['height'] = '25px';\n  $add_1(logpanel, orienbox);\n  $add_1(logpanel, addb);\n  $add(this, logpanel, this.element);\n  $add_0(this, this.storetable);\n  $addDomHandler(addb, new ModulesTab$1_0(this, statbox, orienbox, id_0, xcord, ycord), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  return true;\n}\n;\nfunction ModulesTab$1_0(this$0, val$statbox, val$orienbox, val$id, val$xcord, val$ycord){\n  this.this$0 = this$0;\n  this.val$statbox = val$statbox;\n  this.val$orienbox = val$orienbox;\n  this.val$id = val$id;\n  this.val$xcord = val$xcord;\n  this.val$ycord = val$ycord;\n}\n\ndefineSeed(298, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ModulesTab$1_0);\n_.onClick = function onClick_1(event_0){\n  var code_0, ms, rotations, xc, yc;\n  ms = ($clinit_ModuleStatuses$MODULE_STATUS() , Unknown);\n  rotations = -1;\n  $getSelectElement(this.val$statbox).selectedIndex == 0?(ms = Usable):$getSelectElement(this.val$statbox).selectedIndex == 1?(ms = UsableAfterRepair):(ms = DamagedBeyondRepair);\n  $getSelectElement(this.val$orienbox).selectedIndex == 0?(rotations = 0):$getSelectElement(this.val$orienbox).selectedIndex == 1?(rotations = 1):(rotations = 2);\n  code_0 = 0;\n  xc = -1;\n  yc = -1;\n  try {\n    code_0 = __parseAndValidateInt($getPropertyString($getElement(this.val$id), 'value'));\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (!instanceOf($e0, Q$NumberFormatException))\n      throw unwrap($e0);\n  }\n  try {\n    xc = __parseAndValidateInt($getPropertyString($getElement(this.val$xcord), 'value'));\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (!instanceOf($e1, Q$NumberFormatException))\n      throw unwrap($e1);\n  }\n  try {\n    yc = __parseAndValidateInt($getPropertyString($getElement(this.val$ycord), 'value'));\n  }\n   catch ($e2) {\n    $e2 = wrap($e2);\n    if (!instanceOf($e2, Q$NumberFormatException))\n      throw unwrap($e2);\n  }\n  $validateCode(code_0) && $validateXc(this.this$0, xc) && $validateYc(this.this$0, yc) && $setModuleInfo(this.this$0.root.landingGrid, xc, yc, code_0, rotations, ms) && $refreshDisplayedModules(this.this$0);\n}\n;\nfunction SettingsTab_0(root){\n  GwtWindow_0.call(this);\n  this.root = root;\n}\n\ndefineSeed(299, 290, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), SettingsTab_0);\n_.create = function create_6(){\n  var toggleLoginRequired;\n  toggleLoginRequired = new Button_0('');\n  this.root.configOptions.loginRequired?$setInnerText(($clinit_DOM() , toggleLoginRequired.element), 'Remove Login Requirement'):$setInnerText(($clinit_DOM() , toggleLoginRequired.element), 'Add Login Requirement');\n  $addDomHandler(toggleLoginRequired, new SettingsTab$1_0(this, toggleLoginRequired), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $add(this, toggleLoginRequired, ($clinit_DOM() , this.element));\n  return true;\n}\n;\nfunction SettingsTab$1_0(this$0, val$toggleLoginRequired){\n  this.this$0 = this$0;\n  this.val$toggleLoginRequired = val$toggleLoginRequired;\n}\n\ndefineSeed(300, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), SettingsTab$1_0);\n_.onClick = function onClick_2(event_0){\n  $setLoginRequired(this.this$0.root.configOptions, !this.this$0.root.configOptions.loginRequired);\n  if (this.this$0.root.configOptions.loginRequired) {\n    $setVisible(this.this$0.root.mainWindow.hpLogout, true);\n    $setText(this.val$toggleLoginRequired, 'Remove Login Requirement');\n  }\n   else {\n    $setVisible(this.this$0.root.mainWindow.hpLogout, false);\n    $setText(this.val$toggleLoginRequired, 'Add Login Requirement');\n  }\n}\n;\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 79), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 76), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 301), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 75), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 74), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 73), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 250), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 302), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 147), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 106), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 245), _3C_classLit = createForArray('', '[C', 303), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 239), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 244), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 304), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 305), Lmain_client_HabitatConfig_2_classLit = createForClass('main.client.', 'HabitatConfig', 288), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 240), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 72), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 253), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 237), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 178), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 177), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 176), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 175), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel', 194), Lmain_client_Windows_GwtWindow_2_classLit = createForClass('main.client.Windows.', 'GwtWindow', 290), Lmain_client_Windows_MainWindow_2_classLit = createForClass('main.client.Windows.', 'MainWindow', 295), Lmain_client_Windows_MainWindow$1_2_classLit = createForClass('main.client.Windows.', 'MainWindow$1', 296), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 137), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 136), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 179), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 180), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 181), Lmain_client_Windows_LoginWindow_2_classLit = createForClass('main.client.Windows.', 'LoginWindow', 293), Lmain_client_Windows_LoginWindow$1_2_classLit = createForClass('main.client.Windows.', 'LoginWindow$1', 294), Lmain_client_ConfigOptions_2_classLit = createForClass('main.client.', 'ConfigOptions', 281), Lmain_client_Data_LandingGrid_2_classLit = createForClass('main.client.Data.', 'LandingGrid', 282), Lmain_client_Data_TerrainSquare_2_classLit = createForClass('main.client.Data.', 'TerrainSquare', 287), _3Lmain_client_Data_TerrainSquare_2_classLit = createForArray('[Lmain.client.Data.', 'TerrainSquare;', 306), _3_3Lmain_client_Data_TerrainSquare_2_classLit = createForArray('[[Lmain.client.Data.', 'TerrainSquare;', 307), Lmain_client_Data_Module_2_classLit = createForClass('main.client.Data.', 'Module', 283), _3Lmain_client_Data_Module_2_classLit = createForArray('[Lmain.client.Data.', 'Module;', 308), _3_3Lmain_client_Data_Module_2_classLit = createForArray('[[Lmain.client.Data.', 'Module;', 309), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 174), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 209), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 212), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 210), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 211), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 247), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 241), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 85), Lmain_client_Windows_HomeTab_2_classLit = createForClass('main.client.Windows.', 'HomeTab', 292), Lmain_client_Windows_ModulesTab_2_classLit = createForClass('main.client.Windows.', 'ModulesTab', 297), Lmain_client_Windows_ModulesTab$1_2_classLit = createForClass('main.client.Windows.', 'ModulesTab$1', 298), Lmain_client_Windows_ConfigTab_2_classLit = createForClass('main.client.Windows.', 'ConfigTab', 291), Lmain_client_Windows_CommunicationsTab_2_classLit = createForClass('main.client.Windows.', 'CommunicationsTab', 289), Lmain_client_Windows_SettingsTab_2_classLit = createForClass('main.client.Windows.', 'SettingsTab', 299), Lmain_client_Windows_SettingsTab$1_2_classLit = createForClass('main.client.Windows.', 'SettingsTab$1', 300), Lcom_google_gwt_storage_client_Storage_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage', 150), Lcom_google_gwt_storage_client_Storage$StorageSupportDetector_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage$StorageSupportDetector', 151), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 257), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 256), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 273), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 255), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 259), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 258), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 260), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 262), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 261), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 263), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 267), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 268), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 274), Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$Collector', 84), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 86), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 81), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 140, values_1), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 310), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 184), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 183), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 182), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel', 185), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel', 204), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 201), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 202), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 203), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 186), Lcom_google_gwt_user_client_ui_TabPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabPanel', 217), Lcom_google_gwt_user_client_ui_DeckPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DeckPanel', 187), Lcom_google_gwt_user_client_ui_TabPanel$TabbedDeckPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabPanel$TabbedDeckPanel', 218), Lcom_google_gwt_user_client_ui_TabBar_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabBar', 215), Lcom_google_gwt_user_client_ui_TabPanel$UnmodifiableTabBar_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabPanel$UnmodifiableTabBar', 219), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 3), Lcom_google_gwt_user_client_ui_DeckPanel$SlideAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DeckPanel$SlideAnimation', 188), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 4), Lcom_google_gwt_user_client_ui_TabBar$ClickDelegatePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabBar$ClickDelegatePanel', 216), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 197), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 196), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 222), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 221), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 220), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 223, values_2), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 311), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 224, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 225, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 226, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 227, null), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 138), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 254), Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit = createForClass('com.google.gwt.user.client.', 'BaseListenerWrapper', 157), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 122), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 121), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 163), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 131), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 164), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 125), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 124), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 134), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 133), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 132), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 235), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 236), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML', 195), Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListBox', 205), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 191), Lcom_google_gwt_user_client_ui_FlexTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable', 190), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 193), Lcom_google_gwt_user_client_ui_FlexTable$FlexCellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable$FlexCellFormatter', 192), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 199), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 198), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 252), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 120), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 119), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 118), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 117), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 123), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 105, values), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 312), Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace', 111, values_0), _3Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$WhiteSpace;', 313), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 107, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 108, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 109, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 110, null), Lcom_google_gwt_dom_client_Style$WhiteSpace$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace$1', 112, null), Lcom_google_gwt_dom_client_Style$WhiteSpace$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace$2', 113, null), Lcom_google_gwt_dom_client_Style$WhiteSpace$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace$3', 114, null), Lcom_google_gwt_dom_client_Style$WhiteSpace$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace$4', 115, null), Lcom_google_gwt_dom_client_Style$WhiteSpace$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$WhiteSpace$5', 116, null), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel', 228), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 229), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 314), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 230), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 165), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 166), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 169), Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandardBase', 168), Lcom_google_gwt_user_client_impl_DOMImplIE9_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplIE9', 167), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 278), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 129), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 242), Lcom_google_gwt_user_client_ui_ListenerWrapper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListenerWrapper', 206), Lcom_google_gwt_user_client_ui_ListenerWrapper$WrappedTabListener_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListenerWrapper$WrappedTabListener', 207), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 213), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 214), Lcom_google_gwt_aria_client_RoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RoleImpl', 8), Lcom_google_gwt_aria_client_AlertdialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertdialogRoleImpl', 9), Lcom_google_gwt_aria_client_AlertRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertRoleImpl', 7), Lcom_google_gwt_aria_client_ApplicationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ApplicationRoleImpl', 10), Lcom_google_gwt_aria_client_ArticleRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ArticleRoleImpl', 11), Lcom_google_gwt_aria_client_BannerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'BannerRoleImpl', 12), Lcom_google_gwt_aria_client_ButtonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ButtonRoleImpl', 13), Lcom_google_gwt_aria_client_CheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'CheckboxRoleImpl', 14), Lcom_google_gwt_aria_client_ColumnheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ColumnheaderRoleImpl', 15), Lcom_google_gwt_aria_client_ComboboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComboboxRoleImpl', 16), Lcom_google_gwt_aria_client_ComplementaryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComplementaryRoleImpl', 17), Lcom_google_gwt_aria_client_ContentinfoRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ContentinfoRoleImpl', 18), Lcom_google_gwt_aria_client_DefinitionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DefinitionRoleImpl', 19), Lcom_google_gwt_aria_client_DialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DialogRoleImpl', 20), Lcom_google_gwt_aria_client_DirectoryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DirectoryRoleImpl', 21), Lcom_google_gwt_aria_client_DocumentRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DocumentRoleImpl', 22), Lcom_google_gwt_aria_client_FormRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'FormRoleImpl', 23), Lcom_google_gwt_aria_client_GridcellRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridcellRoleImpl', 25), Lcom_google_gwt_aria_client_GridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridRoleImpl', 24), Lcom_google_gwt_aria_client_GroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GroupRoleImpl', 26), Lcom_google_gwt_aria_client_HeadingRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'HeadingRoleImpl', 27), Lcom_google_gwt_aria_client_ImgRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ImgRoleImpl', 28), Lcom_google_gwt_aria_client_LinkRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LinkRoleImpl', 29), Lcom_google_gwt_aria_client_ListboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListboxRoleImpl', 31), Lcom_google_gwt_aria_client_ListitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListitemRoleImpl', 32), Lcom_google_gwt_aria_client_ListRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListRoleImpl', 30), Lcom_google_gwt_aria_client_LogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LogRoleImpl', 33), Lcom_google_gwt_aria_client_MainRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MainRoleImpl', 34), Lcom_google_gwt_aria_client_MarqueeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MarqueeRoleImpl', 35), Lcom_google_gwt_aria_client_MathRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MathRoleImpl', 36), Lcom_google_gwt_aria_client_MenubarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenubarRoleImpl', 38), Lcom_google_gwt_aria_client_MenuitemcheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemcheckboxRoleImpl', 40), Lcom_google_gwt_aria_client_MenuitemradioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemradioRoleImpl', 41), Lcom_google_gwt_aria_client_MenuitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemRoleImpl', 39), Lcom_google_gwt_aria_client_MenuRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuRoleImpl', 37), Lcom_google_gwt_aria_client_NavigationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NavigationRoleImpl', 42), Lcom_google_gwt_aria_client_NoteRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NoteRoleImpl', 43), Lcom_google_gwt_aria_client_OptionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'OptionRoleImpl', 44), Lcom_google_gwt_aria_client_PresentationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'PresentationRoleImpl', 45), Lcom_google_gwt_aria_client_ProgressbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ProgressbarRoleImpl', 46), Lcom_google_gwt_aria_client_RadiogroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadiogroupRoleImpl', 48), Lcom_google_gwt_aria_client_RadioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadioRoleImpl', 47), Lcom_google_gwt_aria_client_RegionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RegionRoleImpl', 49), Lcom_google_gwt_aria_client_RowgroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowgroupRoleImpl', 52), Lcom_google_gwt_aria_client_RowheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowheaderRoleImpl', 53), Lcom_google_gwt_aria_client_RowRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowRoleImpl', 51), Lcom_google_gwt_aria_client_ScrollbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ScrollbarRoleImpl', 54), Lcom_google_gwt_aria_client_SearchRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SearchRoleImpl', 55), Lcom_google_gwt_aria_client_SeparatorRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SeparatorRoleImpl', 56), Lcom_google_gwt_aria_client_SliderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SliderRoleImpl', 57), Lcom_google_gwt_aria_client_SpinbuttonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SpinbuttonRoleImpl', 58), Lcom_google_gwt_aria_client_StatusRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'StatusRoleImpl', 59), Lcom_google_gwt_aria_client_TablistRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TablistRoleImpl', 61), Lcom_google_gwt_aria_client_TabpanelRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabpanelRoleImpl', 62), Lcom_google_gwt_aria_client_TabRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabRoleImpl', 60), Lcom_google_gwt_aria_client_TextboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TextboxRoleImpl', 63), Lcom_google_gwt_aria_client_TimerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TimerRoleImpl', 64), Lcom_google_gwt_aria_client_ToolbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ToolbarRoleImpl', 65), Lcom_google_gwt_aria_client_TooltipRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TooltipRoleImpl', 66), Lcom_google_gwt_aria_client_TreegridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreegridRoleImpl', 68), Lcom_google_gwt_aria_client_TreeitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeitemRoleImpl', 69), Lcom_google_gwt_aria_client_TreeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeRoleImpl', 67), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 189), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 126), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 264), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 270), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 265), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 266), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 135), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 154), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 156), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 155), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 170), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 243), Lcom_google_gwt_event_logical_shared_BeforeSelectionEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'BeforeSelectionEvent', 128), Lcom_google_gwt_event_logical_shared_SelectionEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'SelectionEvent', 130), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 279), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 272), Lmain_client_Data_ModuleStatuses$MODULE_1STATUS_2_classLit = createForEnum('main.client.Data.', 'ModuleStatuses$MODULE_STATUS', 284, values_3), _3Lmain_client_Data_ModuleStatuses$MODULE_1STATUS_2_classLit = createForArray('[Lmain.client.Data.', 'ModuleStatuses$MODULE_STATUS;', 315), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 249), Lmain_client_Data_ModuleTypes$MODULE_1TYPE_2_classLit = createForEnum('main.client.Data.', 'ModuleTypes$MODULE_TYPE', 286, values_4), _3Lmain_client_Data_ModuleTypes$MODULE_1TYPE_2_classLit = createForArray('[Lmain.client.Data.', 'ModuleTypes$MODULE_TYPE;', 316), Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util.', 'AbstractSequentialList', 269), Ljava_util_LinkedList_2_classLit = createForClass('java.util.', 'LinkedList', 275), Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'LinkedList$ListIteratorImpl', 276), Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util.', 'LinkedList$Node', 277), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 5), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 6);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=habitatconfig-0.js\n"]);
